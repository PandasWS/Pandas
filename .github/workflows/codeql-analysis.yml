name: "CodeQL"

on:
  push:
    branches: [master]
  pull_request:
    branches: [master, develop]
  schedule:
    - cron: '30 1 * * 0'

env:
  CACHE_VERSION: "2021-12-18"

jobs:
  analyze-cpp:
    name: Analyze - C++
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        compiler_version: [9]
        build_type: ['Debug'] # 'RelWithDebInfo'
        configure_flags: ['-DENABLE_EXTRA_BUILDBOT_CODE=ON', '-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON']
        packetver: ['-DPACKETVER=20180620', '-DPACKETVER=20210107 -DPACKETVER_RE=ON']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Preparing dependencies
      run: |
        ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

    - name: Setup gcc compiler
      uses: egor-tensin/setup-gcc@v1
      with:
        version: ${{ matrix.compiler_version }}

    - name: Generate cache hash information
      run: |
        echo "$(cat /proc/version)" >> .CACHE_HASHFILE
        echo "gcc${{ matrix.compiler_version }}" >> .CACHE_HASHFILE
        echo "${{ matrix.build_type }}" >> .CACHE_HASHFILE
        echo "${{ matrix.configure_flags }}" >> .CACHE_HASHFILE
        echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
        echo "${{ hashFiles('3rdparty/boost/bootstrap.sh') }}" >> .CACHE_HASHFILE
        echo "${{ hashFiles('3rdparty/boost/Jamroot') }}" >> .CACHE_HASHFILE
        echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
        cat .CACHE_HASHFILE

    - name: Cache boost c++ libraries
      uses: actions/cache@v2
      id: cache-boost
      env:
        cache-name: codeql-cache-boost
      with:
        path: |
          3rdparty/boost/bin.v2/
          3rdparty/boost/stage/
          3rdparty/boost/b2
        key: ${{ env.cache-name }}-${{ hashFiles('.CACHE_HASHFILE') }}

    - name: Build boost c++ libraries
      if: steps.cache-boost.outputs.cache-hit != 'true'
      run: |
        cd 3rdparty/boost/
        ./bootstrap.sh && ./b2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: cpp
        config-file: ./.github/codeql/codeql-cpp.yml

    - name: Build Pandas
      run: |
        mkdir cbuild && cd cbuild
        cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.packetver }} ${{ matrix.configure_flags }}
        make -j2

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

  analyze-python:
    name: Analyze - Python
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 1

    - name: Install pipenv
      run: pipx install pipenv

    - name: Setup Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        cache: 'pipenv'
        cache-dependency-path: |
          tools/python/Pipfile.lock

    - name: Preparing dependencies
      working-directory: tools/python
      run: pipenv install

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: python
        setup-python-dependencies: false
        config-file: ./.github/codeql/codeql-python.yml

    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1

