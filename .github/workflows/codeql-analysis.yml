name: Analyse servers with CodeQL

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ !contains(fromJSON('["refs/heads/master", "refs/heads/develop"]'), github.ref)}}

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
    paths:
      - '.github/workflows/**'
      - 'tools/integration/**'
      - 'src/**'
      - '3rdparty/**'
      - '**/CMakeLists.txt'
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'tools/integration/**'
      - 'src/**'
      - '3rdparty/**'
      - '**/CMakeLists.txt'

jobs:
  analyze-cpp:
    name: Analyze - C++
    if: ${{ !contains(fromJSON('["ci-skip", "skip-ci", "ql-skip", "skip-ql", "no-ci"]'), github.event.head_commit.message) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        gcc: [10]
        mode: ['PRE','RE']

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Update & Install dependencies
        run: |
          ./tools/integration/retry.sh sudo apt-get update -y
          ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

      - name: Setup GCC compiler
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.gcc }}

      - name: Variable Parsing - PRE
        if: ${{ matrix.mode == 'PRE' }} 
        run: |
          echo "PRERE=ON" >> "$GITHUB_ENV"

      - name: Variable Parsing - RE
        if: ${{ matrix.mode == 'RE' }} 
        run: |
          echo "PRERE=OFF" >> "$GITHUB_ENV"

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: cpp

      - name: Build Pandas
        run: |
          mkdir cbuild && cd cbuild
          cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=Debug -DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=${{ env.PRERE }}
          make -j2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  analyze-python:
    name: Analyze - Python
    if: ${{ !contains(fromJSON('["ci-skip", "skip-ci", "ql-skip", "skip-ql", "no-ci"]'), github.event.head_commit.message) }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pipenv'
          cache-dependency-path: |
            tools/python/Pipfile.lock

      - name: Install dependencies
        working-directory: tools/python
        run: |
          pipx install pipenv
          pipenv install

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          setup-python-dependencies: false
          config: |
            paths:
              - tools/python

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
