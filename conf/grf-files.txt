//--------------------------------------------------------------
// GRF 路径配置文件
//--------------------------------------------------------------
// 这里可以随意添加您想加载的 GRF 文件.
// 
// 这个配置文件用处已经不像几年前那么大了.
// 在最开始的 Athena 系列服务端中, 这个配置文件很重要.
// 因为地图服务器会根据这里指定的 GRF 文件(或指定的 data 目录)
// 去读取它里面的 gat 文件和 rsw 文件,
// 以此来确定地图中有哪些格子是玩家不能移动的, 或有水域覆盖的.
// 
// 现代的 rAthena 服务端中引入了 mapcache 地图缓存概念,
// 通过 mapcache.exe 可以快速的将 GRF 中的数据生成 map_cache.dat 文件,
// 这样地图服务器启动时, 就无需再去读取 GRF 文件, 从而提高了加载速度. 
// 
// 地图服务器现在已经优先读取 mapcache.dat 文件,
// 除非在 conf/map_athena.conf 配置文件中的 use_grf 中改成 yes,
// 否则地图服务器不会再读取此配置文件, 也不会根据此处的配置
// 去读取 GRF 文件(或指定的 data 目录)中的地图数据.
// 
// 此文件现在主要变成了 mapcache.exe 的配置文件.
// 只需要将想读取的 GRF 文件(或指定的 data 目录)在这里设置好,
// 运行 mapcache.exe 就可以生成地图缓存文件(map_cache.dat). 
//--------------------------------------------------------------


//--------------------------------------------------------------
// 注意事项
//--------------------------------------------------------------
// 使用地图缓存文件可以有效提高加载速度,
// 也不需要在服务器上存放巨大的客户端 GRF 文件(或解压后的 data 目录).
// 
// 但缺点其实也比较明显, 只是不常遇到:
// 当你客户端的地图有变化时, 你需要通过 WeeMapCache.exe 手动维护,
// 或者使用 mapcache.exe 重新生成地图缓存文件.
//
// 现在越来越多的人开服都会添加大量的自定义地图,
// 韩服官方近几年也对地图进行了较高频度的微调, 此时越需要注意
// 在每次添加/更新地图文件时刷新地图缓存文件, 否则会导致游戏内表现异常.
//--------------------------------------------------------------

//--------------------------------------------------------------
// 下面这两行配置信息是 rAthena 官方自带的例子.
// 只需要将 grf: 左侧的注释符 // 去掉即可启用, 否则程序将无视他们. 
//--------------------------------------------------------------
//grf: C:\Program Files\Gravity\RO\rdata.grf
//grf: C:\Program Files\Gravity\RO\data.grf

//--------------------------------------------------------------
// 除了通过直接指定 grf 文件外,
// 还可以直接配置到已经被解压的 data 目录.
// 
// 请填写游戏安装目录, 而不是具体到 data\ 目录的路径
// 
// 举个例子:
// C:\Program Files\Gravity\RO\          RIGHT! 这是正确的
// C:\Program Files\Gravity\RO\data\     ERROR! 这是错误的
//--------------------------------------------------------------
//data_dir: C:\Program Files\Gravity\RO\
