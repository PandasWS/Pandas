//--------------------------------------------------------------
// 熊猫模拟器 - 登录服务器配置文件
// 本配置文件由 Peter Kieser <pfak@telus.net> 翻译成英文
// 由熊猫模拟器开发团队翻译成中文并加以润色
//--------------------------------------------------------------
// 提示: 此配置文件中, 只要是以 // 作为开头的行, 都是注释信息. 
// 注释信息您可以随意修改, 不会干扰服务器的任何行为. 
//--------------------------------------------------------------

// 登录服务器会监听来自这个IP地址的网卡信息
// 注意: 该选项允许你在有多个公网网卡(也意味着有多个公网IP)的机器上, 
//       使用相同的"登录服务器端口"来开多个服. 
// 提醒: 若您想启用 bind_ip 选项的话, 记得去掉 bind_ip 前面的注释符: //,
//       否则服务器会忽略它, 导致配了和没配一样. 
//bind_ip: 127.0.0.1

// 登录服务器端口 (默认端口为: 6900)
// 此端口会开放给角色服务器与游戏客户端建立连接
login_port: 6900

// 往控制台窗口中显示内容时, 在每行信息的前面加上时间戳. 
// 最终组成的时间最大长度不能超过 20 个字符.
//  
// 常用的时间格式有:
//    %I:%M:%S %p (小时:分钟:秒数 12小时制, 会携带AM或PM标记)
//    %H:%M:%S (小时:分钟:秒数, 24小时制)
//    %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 请参考 C 语言的 strftime 函数用法. 
// 
// rAthena 官方默认值是 [%d/%b %H:%M] 也就是24小时制的 [日/月 时:分]
// 这明显不符合国人习惯, 为此熊猫模拟器将其默认值改成了 [%Y/%m/%d %H:%M] 
// 
// 若想启用时间戳的话, 请将下面这一行头部的注释符//去掉
//timestamp_format: [%Y/%m/%d %H:%M] 

// 当服务端程序被一些启动器 (LeeStarter) 运行, 从而导致输出信息被重定向时, 
// 是否也将颜色代码一同输出? 
// 
// 问: 这里提到的重定向是指什么? 
// 答: 原本登录服务器的信息将直接显示到控制台窗口, 不过若使用一些启动工具
//     来启动登录服务器的话, 原本应该显示到控制台的信息, 就会被"劫持"到了
//     启动工具里面显示, 这种情况称之为"输出信息被重定向了"!
// 
// 问: 这里提到的颜色代码是指什么? 
// 答: 在我们查看控制台的过程中, 会发现类似 [Status] 的字是绿色的, 
//     而 [Error] 是红色的. 这是因为在程序往控制台输出信息时, 加入了一些
//     颜色编码的缘故. 比如, 若使用颜色编码 "\033[1;31m" 那么则表示接下来的
//     字符用红色输出. 其实有点类似我们脚本中使用的 ^xxxxxx 颜色代码. 
// 
// 此选项一般情况下推荐关闭, 因为基本没什么启动器支持着色
stdout_with_ansisequence: no

// 记录登录服务器在控制台中产生的部分信息到 /log/ 目录中
// 首先您要确保熊猫模拟器的目录中有一个 log 文件夹, 没有的话必须手动创建, 
// 否则日志文件将不会产生.
// 
// 1: 记录控制台中以  [Warning] 开头的警告信息
// 2: 记录控制台中以  [Error]   开头的错误信息和数据库错误信息
// 4: 记录控制台中以  [Debug]   开头的调试信息
// 
// 例如: 想要记录 [Warning]、[Error]、[Debug] 开头的信息, 
//       只需要将1、2、4相加, 将 console_msg_log 设置为 7 即可 (1+2+4)! 
// 
// 日志信息的记录并不会被 console_silent 选项影响.
// 也就是说假如 console_msg_log 设置为 2 想记录 [Error] 信息,
// 而在 console_silent 中设置为 16 想隐藏 [Error] 信息,
// 此时系统将会隐藏 [Error] 信息不显示到控制台, 但与此同时会记录 [Error] 信息到日志中
console_msg_log: 0

// 将登录服务器在控制台中产生的要记录的信息, 写到下面指定的日志文件中
console_log_filepath: ./log/login-msg_log.log

// 选择性隐藏登录服务器控制台中显示出来的一些提示信息: 
// 1:  隐藏控制台中以  [Info]    开头的提示信息
// 2:  隐藏控制台中以  [Status]  开头的状态信息
// 4:  隐藏控制台中以  [Notice]  开头的注意信息
// 8:  隐藏控制台中以  [Warning] 开头的警告信息
// 16: 隐藏控制台中以  [Error]   开头的错误信息和数据库错误信息
// 32: 隐藏控制台中以  [Debug]   开头的调试信息
// 若您想同时隐藏多种信息, 只需要将其对应的数字相加即可
// 例如: 若您想要隐藏[Info]、[Status]、[Notice]开头的信息, 
//       那么只需要将1、2、4相加, 填写 7 即可 (1+2+4)
console_silent: 0

// 是否允许在登录服务器的控制台中直接输入指令
// 开启控制台指令后, 您可以在 login-server 的控制台中输入命令
// 
// 在登录服务器的控制台中输入 help 然后回车, 可以查看指令说明
// 比如: 输入 server:reloadconf 可以让登录服务器重新读取相关的配置文件
// 还能输入 "create:用户名 密码 性别" (不含引号)来直接创建新账号
// 
// 想要启用这个功能的话, 请将下面的值改成on即可
// 若启用, 那么请避免在控制台中使用 ">& 日志文件.log" 这样的输出指令
console: off

// 是否允许使用 _M/_F 的方式来注册新账号?
// 注意: 只有在客户端未开启"密码加密机制"时, 使用 _M/_F 方式来注册账号才有效.
// 
// Sola丶小克:
// 上述提到的"密码加密机制"目前暂不明确是哪个具体功能.
// 使用 NEMO 对 20180620 的客户端进行 DIFF 处理时, 并没有出现类似的选项.
new_account: yes

// 若您将 new_account 设置为 yes 的话
// 那么是否要求新建的账号和密码的长度都必须大于等于 4 个字符?
//  
// 在一般情况下推荐设置为 yes, 除非您在 Diff 客户端的时候
// 启用了 'Disable 4 LetterUserID/Password' 选项, 那么可以设置为 no
new_acc_length_limit: yes

// 批量注册账号攻击防护
// 在 time_allowed 秒内最多允许注册 allowed_regs 个账号
allowed_regs: 1
time_allowed: 10

// 是否记录登录服务器产生的日志?
// 记录的日志包括以下内容, 这些内容会记录到数据库的 loginlog 表中:
// 
//   登录服务器启动时记录日志
//   登录服务器关闭时记录日志
//   某个用户的鼠标密码验证失败时记录日志
//   某个用户登录成功
//   某个用户登录失败
//   角色服务器和登录服务器建立了连接
//   某个被加入黑名单的IP地址对登录服务器发起连接请求
// 
// 设置为 yes 则表示记录日志(默认), 设置为 no 则表示不记录日志
// 
// 注意: 若设置为 no 的话会影响 ipban_enable 的功能,
//       因为 ipban 依赖这里的登录日志, 来查询某 IP 在一段时间内的密码错误次数.
log_login: yes

// 登录服务器在需要显示时间的时候, 用什么格式显示?
// 
// 这个字段被使用的地方其实比较有限, 目前找到下面两个: 
// 1、当玩家登录时如果这个账号已经被封禁, 那么会在登录服务器的控制台中
//    显示出一个日期, 这个日期就遵循下面的格式. 
// 2、当角色服务器请求登录服务器封禁一个账号时, 在登录服务器的控制台中
//    也会显示出一个提示信息, 这个日期也会遵循下面的格式. 
date_format: %Y-%m-%d %H:%M:%S

// 只允许 group_id >>等于<< 指定数字的账号才能登录到服务器
// 假如您填写的数字是 99 那么表示只有 group_id 等于 99 的账号才能登录
// 其他账号登入时则会提示服务器正在维护, 无法登录
// 
// 填写 -1 表示关闭此机制(默认)
// 填写 0 或其他大于 0 的数, 则表示仅 group_id 等于指定值的账号可登陆
group_id_to_connect: -1

// 只允许 group_id >>大于或等于<< 指定数字的账号才能登录到服务器
// 假如您填写的数字是 10 那么表示只有 group_id 大于等于 10 的账号才能登录
// 其他账号登入时则会提示服务器正在维护, 无法登录
// 
// 注意: 如果 group_id_to_connect 的值不是-1的话, 那么此开关无效
// 填写 -1 表示关闭此机制, 不作任何限制 (默认)
// 填写 0 或其他大于 0 的数, 则表示仅 group_id 大于等于指定值的账号可登陆
min_group_id_to_connect: -1

// VIP玩家组对应的 group_id 是哪个? (默认值为: 5)
// 当一个玩家被提升到 VIP 玩家组时, 那么他的 group_id 会变成这里的指定值
vip_group: 5

// 普通账号允许建立几个角色? 
// 
// 你不能创建超过 MAX_CHARS 个账号角色, 他在 mmo.hpp 中配置.
// 如果设置为 0, 则只能创建 MIN_CHARS 个角色.
chars_per_account: 0

// VIP 账号允许比普通账号多建立几个角色?
// Increase the value of MAX_CHARS if you want to increase vip_char_increase.
// Note: The amount of VIP characters = MAX_CHARS - chars_per_account.
// Note 2: This setting must be set after chars_per_account.
// -1 will default to MAX_CHAR_VIP (src/config/core.hpp)
vip_char_increase: -1

// 刚创建的账号有多长的游戏时间? 
// 若设置为 -1 表示新建的账号拥有无限的游戏时间(默认)
// 若设置为 0 或者其他数字, 则表示新账号将在指定的秒数之后将直接过期
//
// 当过期时间到了之后, 这个账号若在线则会被强制下线, 并无法再登录
// 除非完成相关的续期操作, 才能重新进入游戏
start_limited_time: -1

// 保存密码到 login 数据表时,
// 是否使用对密码进行 MD5 哈希处理, 而不是保存密码明文? 
// 
// 提示: 当客户端使用 <passwordencrypt> 机制的话, 此功能不可用. 
// 
// Sola丶小克: 
// 不清楚 <passwordencrypt> 机制是个什么东西, 按字面意思是<密码加密机制>, 
// 若您知道的话, 望不吝赐教, 感谢! 邮箱是: cairoliyu@gmail.com
// 
// 若你之前使用 no 选项, 现在想修改成 yes 的话,
// 需要在主数据库中执行以下查询语句:
// UPDATE `login` SET `user_pass`=MD5(`user_pass`);
// 否则修改此选项之前注册的账号将无法正常登录. (感谢"好刀一把"建议).
use_MD5_passwords: no

// 以下四个选项仅在客户端版本大于等于 20170726 时有效
// 当玩家输入账号密码后客户端会提示选择线路, 此时是否隐藏服务器压力说明?
usercount_disable: no
// 在线人数小于等于 usercount_low 指定人数, 则显示成绿色空闲状态 (Smooth)
usercount_low: 200
// 在线人数小于等于 usercount_medium 指定人数, 则显示成黄色普通状态 (Normal)
usercount_medium: 500
// 在线人数小于等于 usercount_high 指定人数, 则显示成红色繁忙状态 (Busy)
usercount_high: 1000

// 是否启用 IP 地址黑名单功能
ipban_enable: yes

// 当密码重试超过指定次数时, 是否将 IP 加入黑名单?
ipban_dynamic_pass_failure_ban: yes

// 在几分钟内密码重试次数超过限制时, 加入黑名单? (默认5次)
ipban_dynamic_pass_failure_ban_interval: 5

// 当密码重试次数达到多少次之后, 认为超过限制? (默认7次)
ipban_dynamic_pass_failure_ban_limit: 7

// 将 IP 加入黑名单后, 封禁多长时间(以分钟为单位)? (默认5分钟)
ipban_dynamic_pass_failure_ban_duration: 5

// 每间隔多少秒自动清理过了封禁期的 IP 地址? 0 = 不清理. 默认值为 60.
// 提示: 如果设置为不清理, 那么过了封禁期的 IP 地址将会在登录服务器启动和退出时被清空. 
// 玩家的 IP 地址虽然还在黑名单列表中, 不过由于已经过了封禁期, 所以玩家可以正常登录. 
ipban_cleanup_interval: 60

// 间隔多少分钟进行一次 DNS/IP 更新? (此功能默认关闭)
// 若您的服务器使用的是动态 IP 地址, 且每过一段时间 IP 地址会自动变化的话, 请启用此选项.
// 建议: 使用花生壳等 DDNS 服务的话, 此选项视情况应该打开.
//ip_sync_interval: 10

// 是否启用 DNS 封禁黑名单机制?
// 若启用此机制, 任何连接请求都会先检查对方是否在黑名单中, 若在黑名单中则禁止连接
// 
// 问: 为什么叫“DNS封禁黑名单”? 
// 答: 因为系统用来判定对方是否在黑名单中的根据, 是将 IP 地址组成一个域名, 然后看看
//     这个域名是否已经被 DNS 服务器所解析, 若是, 则认为对方在黑名单中. 
// 
// 问: 具体的工作机制是什么样的? 
// 答: 当一个服务器收到连接请求时, 会先获得对方的 IP 地址, 比如127.0.0.1, 然后将这个
//     IP地址反序, 变成 1.0.0.127, 然后拼接上 dnsbl_servers 所指定的DNS服务器, 比如
//     若和 bl.blocklist.de 拼接, 那么最终会拿到一个为 1.0.0.127.bl.blocklist.de 的
//     域名, 然后对这个域名做解析, 如果解析成功, 则认为对方在黑名单内. 
// 
// 问: 为什么会有这样的机制存在? 
// 答: 在国外会有一些安全机构(或者个人), 他们会找出一些攻击过某些服务器的 IP 地址, 将
//     他们用上面的方式变成一个域名, 并完成解析来标记这个 IP 地址为坏人, 
//     以此来协助其他人, 来快速的识别一个 IP 地址是否可以信任. 
// 
// 问: 启用此选项会有什么副作用么?
// 答: 从原理上讲, 启用这个机制会导致每一次连接都会做IP地址检查, 所以开启之前玩家
//     输入账号密码后登录会很快的返回登录结果, 开启之后可能要比原来多花 1-2 秒的时间! 
//     此外, 这个机制依赖服务器本身的 DNS 服务器可靠性, 假设有人劫持您的 DNS 解析结果, 
//     让每一个请求都返回“已解析”的样子, 那么会导致登录服务器拒绝一切连接. 
use_dnsbl: no

// 设置提供封禁查询服务的 DNS 服务器地址 (有多个则用逗号分隔)
//
// 在这里可以查到免费的DNS黑名单服务:
// http://en.wikipedia.org/wiki/Comparison_of_DNS_blacklists
// ==============================================================================
// DNS 黑名单服务器                描述
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// bl.blocklist.de                 IP-Addresses who attack other servers/honeypots over SSH, FTP, IMAP, etc.
// ircbl.ahbl.org                  AHBL (open proxies, compromised machines, comment spammers)
// safe.dnsbl.sorbs.net            All zones in dnsbl.sorbs.net except "recent" and "escalations"
// sbl-xbl.spamhaus.org            Spamhaus blacklist (spammers, open proxies)
// socks.dnsbl.sorbs.net           Open SOCKS proxy servers
// tor.ahbl.org                    Current tor relay and exit nodes
dnsbl_servers: bl.blocklist.de, socks.dnsbl.sorbs.net

// 是否校验客户端的 MD5 指纹?
// 若打开此选项, 那么登录服务器会校验客户端的 MD5 指纹
// 如果是不认识的客户端, 则禁止连接到服务器.
// 提示: 您可以查看 'doc/md5_hashcheck.txt' 以便获得更详细的信息.
client_hash_check: off

// Enable web authentication token system
// This is required for new clients that get data via an additional API over HTTP
use_web_auth_token: yes

// 客户端指纹验证策略
// 限制只有 group_id 大于等于指定数值的玩家, 可以使用指定指纹的客户端登录游戏
// 
// 当您指定一个指纹为 'disabled' 的话, 则表示 group_id 大于等于指定数值的玩家
// 可以无视客户端指纹限制, 随时都可以登录游戏 (哪怕客户端不发送 MD5 指纹, 都可以登录)
// 
// 注意: 想使用此功能那么必须在 Diff 客户端的时候, 让客户端发送指纹封包
// 具体做法是, 在使用NEMO对客户端进行 Diff 的时候, 启用 'Force Send Client Hash Packet (Experimental)' 选项
//
// 格式: group_id, 客户端的哈希指纹
// 提示: 查看 'doc/md5_hashcheck.txt' 可获得更详细的信息.
//client_hash: 0, 113e195e6c051bb1cfb12a644bb084c5
//client_hash: 10, cb1ea78023d337c38e8ba5124e2338ae
//client_hash: 99, disabled

//===================================
// 熊猫模拟器拓展设置
//===================================
// 是否禁止使用中文字符作为游戏账号?
// 启用此选项之后, 在使用 _M/_F 方式注册账号时, 只允许使用以下字符作为游戏账号:
// 0~9、a-z、A-Z, 以及 ~!@#$%^&*()_-=+`[]{}\|;:'"<>,.?/ (不含空格)
// 默认值为: yes
strict_new_account_userid: yes

// 是否隐藏角色服务器的在线人数?
// 设置为 yes 的话, 就算玩家自己修改 msgstringtable.txt 中的内容,
// 强行在 484 行中添加 %d 参数企图显示在线人数, 也会永远返回 0 人在线.
// 默认值为: no
//
// 建议: 启用此选项之后, 最好将客户端 data/msgstringtable.txt 中
// 第 484 行附近的 " 目前在线 %d 人#" 文本信息中的 %d 去掉,
// 比如直接填写一个井号, 变成空行: "#"
// 否则每次用户登录看到的在线人数都是 0 人, 会显得有点奇怪.
//
// 若您使用的客户端版本大于或等于 2017-07-26 的话, 客户端应该已经不再显示
// 出详细的在线人数了, 改而使用颜色和繁忙程度来描述服务器的压力.
// 与服务器繁忙程度和颜色相关的选项, 在本文件的 usercount_disable 选项附近.
//
// 尽管如此, 无论您是否启用或者关闭 usercount_disable 选项,
// 当客户端版本大于或等于 2017-07-26 时启用此选项,
// 登录服务器也将强制把此文件中的 usercount_disable 选项设置为 yes.
hide_online_players_count: no

import: conf/inter_athena.conf
import: conf/import/login_conf.txt
