//===== Pandas Documentation ================================
//= Pandas 事件标签说明文档
//===== By: ==================================================
//= Pandas 开发团队
//===== Last Updated: ========================================
//= 2019年4月4日
//===== Description: =========================================
//= 此文档对 Pandas 添加的自定义事件标签进行了说明, 包括这些
//= 事件的触发时机、关联玩家、可能的返回参数等.
//============================================================

*OnPCIdentifyFilter:

当玩家在装备鉴定列表中选择好装备, 并点击“确定”按钮时触发过滤器

事件关联:
	关联到发起鉴定的玩家

中断说明: 
	中断后会无视玩家本次鉴定道具的请求, 系统不再鉴定此装备

携带参数:
	@identify_idx	被玩家选择进行鉴定的道具背包序号

---------------------------------------

*OnPCIdentifyEvent:

当玩家成功鉴定了装备时触发事件

事件关联:
	关联到发起鉴定的玩家

中断关联:
	若玩家鉴定装备时在 OnPCIdentifyFilter 事件中使用了 processhalt
	指令打断了后续流程, 那么此事件将不会被触发.

携带参数:
	@identify_idx	已被玩家成功鉴定的道具背包序号

---------------------------------------

*OnPCInChatroomFilter:

当玩家双击进入 NPC 开启的聊天室时将触发过滤器

事件关联:
	关联到进入聊天室的玩家

中断关联:
	中断后客户端将不会打开聊天室窗口
	
注意事项:
	只会触发建立聊天室的 NPC 名下的过滤器事件,
	其他 NPC 使用的 OnPCInChatroomFilter 过滤器不会被触发
	
	此外需要注意的是 rAthena 自带的 waitingroom 指令有一个 "<event label>" 事件,
	当聊天室中的成员数量足够时就会被触发. 若您在本过滤器中使用 processhalt
	指令打断了后续流程, 那么 waitingroom 的事件将不会被触发.

---------------------------------------

*OnPCEquipFilter:

当玩家准备穿戴装备时触发过滤器
当玩家执行"装备切换"将"待用装备"转正为"生效装备"时也会触发过滤器

事件关联:
	关联到即将穿戴装备的玩家

中断关联:
	中断后服务端会无视玩家本次穿戴操作
	若 @equip_swapping 为 1 时, 使用 processhalt 是无效的

携带参数:
	@equip_idx		玩家即将穿戴的装备背包序号
	@equip_swapping	本次穿戴是否由于"装备切换"而触发的
	
装备切换:
	新的仙境传说客户端支持"装备切换"机制,
	此时如果单独将装备拖动到装备面板的"待用装备"窗口中进行登记,
	不会触发此过滤器 (因为此时装备并未实际穿戴).

注意事项:
	若玩家身上已穿戴一件相同位置的装备,
	那么过滤器被触发时用 processhalt 打断了穿戴本装备的后续过程,
	角色身上的原穿戴的装备也不会被脱下.
	
	当玩家穿戴一件未被绑定的装备, 并在客户端中确认执行绑定后,
	在过滤器中用 processhalt 打断后续过程, 装备也将维持最初的未绑定状态.

---------------------------------------

*OnPCEquipEvent:

当玩家成功穿戴一件装备时触发事件
当玩家执行"装备切换"将"待用装备"转正为"生效装备"成功后也会触发事件

事件关联:
	关联到穿戴装备的玩家

携带参数:
	@equip_idx		玩家穿戴的装备背包序号
	@equip_swapping	本次穿戴是否由于"装备切换"而触发的

装备切换:
	新的仙境传说客户端支持"装备切换"机制,
	此时如果单独将装备拖动到装备面板的“待切换装备”窗口中进行登记,
	不会触发此事件 (因为此时装备并未实际穿戴).

---------------------------------------

*OnPCUnequipFilter:

当玩家准备脱下装备时触发过滤器
用一个新装备去替换位置相同且已穿戴的“生效装备”时也会触发过滤器

事件关联:
	关联到即将脱下装备的玩家

中断关联:
	中断后服务端会无视玩家本次脱下操作
	若 @unequip_swapping 为 1 时, 使用 processhalt 是无效的

携带参数:
	@unequip_idx		玩家即将脱下的装备背包序号
	@unequip_swapping	本次脱下是否由于"装备切换"而触发的
	@unequip_force		本次脱下是否由某个需要强制脱下的内部逻辑产生的

装备切换:
	新的仙境传说客户端支持"装备切换"机制,
	此时如果单独将装备从到装备面板的"待用装备"窗口中拖离移除,
	不会触发此过滤器 (因为此时装备并未实际脱下).

注意事项:
	当 @unequip_swapping 为 1 时, "生效装备"实际上只是和"待用装备"
	进行了交换, 并未直接脱下到背包中.

	替换位置相同的"生效装备"时, 参数 @unequip_swapping 的值为 0.
	
	当程序内部逻辑需要强制脱下某件装备时, @unequip_force 将为 1,
	当它为 1 的时候请尽量不要使用 processhalt 打断后续流程, 或删除即将被操作的装备.
	因为这可能引发各种奇怪的问题. 比如: 当替换装备的时候相同位置的老装备应该被强制脱下, 
	如果此时打断后续流程, 那么新穿戴的装备虽然可以成功穿戴, 但是老的装备的"脱下脚本"就不会被触发.

---------------------------------------

*OnPCUnequipEvent:

当玩家成功脱下一件装备时触发事件
用一个新装备去替换位置相同且已穿戴的“生效装备”, 导致它被成功脱下时也会触发过滤器

事件关联:
	关联到脱下装备的玩家

携带参数:
	@unequip_idx		玩家成功脱下的装备背包序号
	@unequip_swapping	本次脱下是否由于"装备切换"而触发的
	@unequip_force		本次脱下是否由某个需要强制脱下的内部逻辑产生的

装备切换:
	新的仙境传说客户端支持"装备切换"机制,
	此时如果单独将装备从到装备面板的"待用装备"窗口中拖离移除,
	不会触发此过滤器 (因为此时装备并未实际脱下).

注意事项:
	当 @unequip_swapping 为 1 时, "生效装备"实际上只是和"待用装备"
	进行了交换, 并未直接脱下到背包中.

	替换位置相同的"生效装备"时, 参数 @unequip_swapping 的值为 0.
	
	当程序内部逻辑需要强制脱下某件装备时, @unequip_force 将为 1,
	当它为 1 的时候请尽量不要使用 processhalt 打断后续流程, 或删除即将被操作的装备.
	因为这可能引发各种奇怪的问题. 比如: 当替换装备的时候相同位置的老装备应该被强制脱下, 
	如果此时打断后续流程, 那么新穿戴的装备虽然可以成功穿戴, 但是老的装备的"脱下脚本"就不会被触发.

---------------------------------------

*OnPCPartyCreateFilter:

当玩家准备创建队伍时触发过滤器

事件关联:
	关联到即将创建队伍的玩家

中断关联:
	中断后服务端会无视玩家本次创建队伍的操作

---------------------------------------

*OnPCPartyCreateEvent:

当玩家成功创建队伍后触发事件

事件关联:
	关联到成功创建队伍的玩家

---------------------------------------

*OnPCPartyJoinFilter:

当玩家准备加入队伍时触发过滤器

事件关联:
	关联到即将加入队伍的玩家

中断关联:
	中断后服务端会无视玩家本次加入队伍的操作

---------------------------------------

*OnPCPartyJoinEvent:

当玩家成功加入队伍后触发事件

事件关联:
	关联到成功加入队伍的玩家

---------------------------------------

*OnPCPartyLeaveFilter:

当玩家准备离开队伍时触发过滤器

事件关联:
	关联到即将离开队伍的玩家

中断关联:
	中断后服务端会无视玩家本次离开队伍的操作

携带参数:
	@leave_party_id		想要离开的队伍编号
	@leave_party_name$	想要离开的队伍名称
	@leave_party_reason	离开的原因是 0 - 自愿退出; 1 - 被驱逐

---------------------------------------

*OnPCPartyLeaveEvent:

当玩家成功离开队伍后触发事件

事件关联:
	关联到成功离开队伍的玩家

携带参数:
	@leave_party_id		刚刚离开的队伍编号
	@leave_party_name$	刚刚离开的队伍名称
	@leave_party_reason	离开的原因是 0 - 自愿退出; 1 - 被驱逐

---------------------------------------

*OnPCHomLvUpEvent:

当人工生命体升级时触发事件

事件关联:
	关联到生命体的主人

---------------------------------------

*OnPCHomCallEvent:

当召唤人工生命体时触发事件

事件关联:
	关联到生命体的主人

---------------------------------------

*OnPCHomRestEvent:

当人工生命体安息时触发事件

事件关联:
	关联到生命体的主人

---------------------------------------

*OnPCHomDeadEvent:

当人工生命体死亡时触发事件

事件关联:
	关联到生命体的主人

---------------------------------------

*OnPCHomAliveEvent:

当人工生命体复活时触发事件

事件关联:
	关联到生命体的主人

---------------------------------------

*OnPCGuildCreateFilter:

当玩家准备创建公会时触发过滤器

事件关联:
	关联到即将创建公会的玩家

中断关联:
	中断后服务端会无视玩家本次创建公会的操作

---------------------------------------

*OnPCGuildCreateEvent:

当玩家成功创建公会后触发事件

事件关联:
	关联到成功创建公会的玩家

---------------------------------------

*OnPCGuildJoinFilter:

当玩家准备加入公会时触发过滤器

事件关联:
	关联到即将加入公会的玩家

中断关联:
	中断后服务端会无视玩家本次加入公会的操作

携带参数:
	@join_guild_id		即将加入的公会编号

---------------------------------------

*OnPCGuildJoinEvent:

当玩家成功加入公会后触发事件

事件关联:
	关联到成功加入公会的玩家

携带参数:
	@join_guild_id		刚刚加入的公会编号

---------------------------------------

*OnPCGuildLeaveFilter:

当玩家准备离开公会时触发过滤器

事件关联:
	关联到即将离开公会的玩家

中断关联:
	中断后服务端会无视玩家本次离开公会的操作
	若 @leave_guild_reason 为 2 时, 使用 processhalt 会无视本次解散公会的操作

携带参数:
	@leave_guild_id		想要离开的公会编号
	@leave_guild_name$	想要离开的公会名称
	@leave_guild_reason	离开公会的原因是 0 - 自愿退出; 1 - 被驱逐; 2 - 公会解散

---------------------------------------

*OnPCGuildLeaveEvent:

当玩家成功离开公会后触发事件

事件关联:
	关联到成功离开公会的玩家

携带参数:
	@leave_guild_id		刚刚离开的公会编号
	@leave_guild_name$	刚刚离开的公会名称
	@leave_guild_reason	离开公会的原因是 0 - 自愿退出; 1 - 被驱逐; 2 - 公会解散

---------------------------------------

*OnPCInsertCardFilter:

当玩家准备插入卡片时触发过滤器

事件关联:
	关联到准备插卡的玩家

中断关联:
	中断后服务端会无视玩家本次插入卡片的操作

携带参数:
	@insert_equip_idx	即将被插卡的装备背包序号
	@insert_card_idx	即将被插入的卡片背包序号
	@insert_card_id		即将被插入的卡片物品编号
	@insert_card_slot	即将被插入卡片的卡槽编号 ( 0 - 第一个卡槽; 3 - 第四个卡槽 )

---------------------------------------

*OnPCInsertCardEvent:

当玩家成功插入卡片后触发事件

事件关联:
	关联到刚刚完成插卡的玩家

携带参数:
	@insert_equip_idx	刚刚成功插卡的装备背包序号
	@insert_card_idx	刚刚被插卡消耗掉的卡片背包序号 (注意: 此时的卡片已被删除)
	@insert_card_id		刚刚被插入的卡片物品编号
	@insert_card_slot	刚刚被插入卡片的卡槽编号 ( 0 - 第一个卡槽; 3 - 第四个卡槽 )

注意事项:
	此事件只有成功完成插卡后才会被触发, 插卡失败是不会触发的
	不过插卡失败的情况一般几乎不可能发生, 可以安心使用
	
	@insert_card_idx 参数指向的背包序号在极端情况下将不可信

---------------------------------------

*OnPCUseItemFilter:

当玩家准备使用非装备类道具时触发过滤器

事件关联:
	关联到准备使用道具的玩家

中断关联:
	中断后服务端会无视玩家本次使用道具的操作

携带参数:
	@useitem_idx	即将被使用的道具背包序号
	@useitem_nameid	即将被使用的道具编号

---------------------------------------

*OnPCUseItemEvent:

当玩家成功使用非装备类道具后触发事件

事件关联:
	关联到成功使用了道具的玩家

携带参数:
	@useitem_idx	刚刚被使用的道具背包序号 (注意: 此时的道具可能已被消耗)
	@useitem_nameid	刚刚被使用的道具编号

注意事项:
	@useitem_idx 参数指向的背包序号在极端情况下将不可信
	本事件与 rAthenaCN 老版本的同名事件含义不同, 请脚本编写人员留意

---------------------------------------

*OnPCUseSkillFilter:

当玩家准备使用技能时触发过滤器

事件关联:
	关联到准备使用技能的玩家

中断说明:
	中断后服务端会无视玩家本次使用技能的请求

携带参数:
	@useskill_id			即将施放的技能编号
	@useskill_lv			即将施放的技能等级
	@useskill_target_gid	被施法目标的 GameID, 若为 0 则表示这是个地面技能
	@useskill_pos_x			即将被施法的地面 X 坐标
	@useskill_pos_y			即将被施法的地面 Y 坐标

注意事项:
	为了方便利用事件实现一些技能, 本过滤器的触发时机非常早,
	就算玩家被 setpcblock 设置为禁用技能, 此过滤器也能够被触发.
	
	此过滤器触发时, 技能咏唱及施法条件判断、材料扣除等尚未发生.

---------------------------------------

*OnPCUseSkillEvent:

当玩家成功使用技能后触发事件

事件关联:
	关联到成功使用了技能的玩家

携带参数:
	@useskill_id			刚刚施放的技能编号
	@useskill_lv			刚刚施放的技能等级
	@useskill_target_gid	被施法目标的 GameID, 若为 0 则表示这是个地面技能
	@useskill_pos_x			刚刚被施法的地面 X 坐标
	@useskill_pos_y			刚刚被施法的地面 Y 坐标

注意事项:
	模拟器内部的技能实现流程比较长, 手动测试无法覆盖全部分支.
	若您发现自己关心的某个技能使用后该事件没被触发的话,
	可以前往 https://github.com/PandasWS/Pandas 提交 Issue 进行反馈.
