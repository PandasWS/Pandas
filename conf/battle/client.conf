//--------------------------------------------------------------
// 熊猫模拟器战斗配置选项
// 最初的翻译由 Peter Kieser <pfak@telus.net> 完成
// 由 Ancyker 改写成纯英文, 由熊猫模拟器开发团队进行汉化
//--------------------------------------------------------------
//   开关选项: 可以用 on/off, yes/no 或 1/0 来表示开关
// 百分比选项: 填写 100 即表示 100%
//   掩码选项: 没有特殊说明的情况下, 默认用来表示游戏中各单位的类型
//             ------------------------------------
//             | 十六进制  |  十进制  |  对应单位 |
//             | 0x001     |  1       |  玩家     |
//             | 0x002     |  2       |  魔物     |
//             | 0x004     |  4       |  宠物     |
//             | 0x008     |  8       |  生命体   |
//             | 0x010     |  16      |  佣兵     |
//             | 0x080     |  128     |  NPC      |
//             | 0x200     |  512     |  元素精灵 |
//             ------------------------------------
//             掩码选项一个数值可以表示里面有多个内容. 
//             例如: 若想表示玩家和宠物, 只需填写 5 即可 (1 + 4)
//             掩码选项支持的填写格式有两种: 分别是十六进制和十进制,
//             若您填写十六进制则需要用 0x 作为数值的开头
//--------------------------------------------------------------

// 发私聊/公聊/组队/公会消息的最小间隔时间 (单位为毫秒)
//
// 如果消息发得过快会被地图服务器忽略掉,
// 发送者和周围的人都无法在聊天栏中看到被地图服务器忽略的消息.
// 
// 默认值为: 0 (无限制, 随便发)
min_chat_delay: 0

// 客户端有效的服装染色和发型、发色编号范围
// 
// 我们知道官方默认情况下的发型只有 0~27 一共 28 种,
// 如果玩家或者 GM 给角色应用了一个不存在的发型编号的话,
// 就会迫使客户端去读取这个不存在的编号对应的图档文件, 导致报错或卡死...
// 
// 这里的几个选项就是为了避免玩家或 GM 给发型、发色
// 和服装染色设置了超出范围的值而设定的保护阀值
//
// 举个例子:
// 如果你添加了不止 28 种发型的话,
// 那么就需要调整下面 max_hair_style 的值使之与实际情况对应,
// 否则当你给玩家设置编号超过 27 的发型时,
// 服务端就会报错来告诉你填写的发型编号不在有效范围内

// 发型编号有效区间的最小值
// 默认值为: 0
min_hair_style: 0

// 发型编号有效区间的最大值
// 默认值为: 42
max_hair_style: 42

// 发色编号有效区间的最小值
// 默认值为: 0
min_hair_color: 0

// 发色编号有效区间的最大值
// 默认值为: 8
max_hair_color: 8

// 染色编号有效区间的最小值
// 默认值为: 0
min_cloth_color: 0

// 染色编号有效区间的最大值
// 默认值为: 7
max_cloth_color: 7

// 服装风格编号有效区间的最小值
// 默认值为: 0
min_body_style: 0

// 服装风格编号有效区间的最大值
// 默认值为: 1
max_body_style: 1

// 是否隐藏公会战时对敌对单位的伤害数值 (开关选项)
// 
// 若启用此选项, 任何人在 GVG 地图中产生的伤害数值
// 在发送给客户端的时候都会被强制设为 -1,
// 让 GM、外挂机器人和以其他方式篡改客户端、进行封包嗅探的人
// 无法在 GVG 时得到自己或其他人产生的具体伤害数值.
// 
// 默认值为: no (不隐藏)
hide_woe_damage: no

// 用于标识宠物的 "发型" 字段值
// 提示: 客户端会使用 mob 数据包中的 "发型" 字段来区分宠物和魔物
//
// 这个值绝对会大于客户端中可用的最大发型编号
// 例如客户端中认为当前有效的最大发型编号为 42 (max_hair_style 为 42),
// 那么用于标识宠物的 "发型" 字段值就绝对会大于 42.
//
// 写给各位好奇宝宝: 该数值通常需要经过逆向分析客户端中的代码才能得到,
// 因此绝大多数情况下, 你不需要修改这个值.
//
// 已知可用的值 (所有 2005 年的客户端):
// - 旧版 sakexe: 20
// - sakexe 0614: 24
// - sakexe 0628 及之后的版本: 100
//
// 默认值为: 100
pet_hair_style: 100

// 玩家、魔物等的视野范围 (单位: 格子)
// 默认情况下这里的视野范围是以单位为中心, 上下左右各 14 格的范围
// 也就是说, 视野范围是 29x29 格的区域
//
// 这个值通常不建议调整的特别大,
// 每次玩家移动时服务器都会将玩家视野范围内的单位发送给客户端,
// 因此视野越大服务器的封包发送数量就会越大.
//
// 默认值为: 14
area_size: 14

// 玩家单次移动的最大格子数 (玩家通过鼠标点击地面移动时, 最多可以走多少格)
// 默认值为: 17
max_walk_path: 17

// 多少级的角色客户端会显示光环?
// 配合 aura_lv 选项使用, 用于告诉客户端何时应该显示光环
//
// 注意事项:
// - 如果你想让它发挥作用, 你还需要确保客户端达到该等级时能显示光环
// - 超过 127 的值可能会表现得不正确, 不要超过这个值
// - 如果你不知道它的作用, 就不要改变它!!!
//
// 提醒一下:
// 这里的值不会影响角色的最大等级限制, 只用来在较老的客户端中控制光环显示.
//
// 默认值为: 99
max_lv: 99

// 当角色等级达到多少时显示光环?
// 该选项的假设是发送 max_lv 给客户端会显示光环.
//
// 举个例子:
// 假设 max_lv 设置为 99 并且 aura_lv 设置为 150,
// 那么等级为 99~149 的角色服务端将会告诉客户端他们的等级为 98 (无光环),
// 只有等级为 150 或以上的角色才会告诉客户端他们的等级为 99 (有光环).
//
// 在早期那种只有 99 级才能显示光环的客户端中,
// 如果想要调整玩家的最大等级为 150 级, 并且希望 99 级的时候不显示光环,
// 等到 150 级的时候才显示的话,
// 就只能使用 aura_lv 选项和 max_lv 选项来配合达到目的.
//
// 现在的 20211117 前后的客户端已经不需要这样做了,
// 如果你使用的是 2021 年后的客户端, 通常 max_lv 和 aura_lv 保持 99 即可.
//
// 默认值为: 99
aura_lv: 99

// 哪些单位类型受 max_lv 和 aura_lv 的影响? (掩码选项)
// 当此选项为 0 的时候, 上面的 max_lv 和 aura_lv 选项将不会起作用.
//
// 如果一个单位类型平常不显示光环 (生命体),
// 但是你在这里把它的单位类型填写进去, 那么当等级满足的时候它就会显示光环.
//
// 默认值: 0 (没有任何单位会受到影响)
client_limit_unit_lv: 0

// 是否显示燕尾服和婚纱的穿着效果？ (开关选项)
// 此选项仅控制 changebase 和 setoption 脚本指令的效果.
//
// 默认值: no (不显示)
wedding_modifydisplay: no

// 是否保存染色编号? (开关选项)
// 启用后角色的染色编号将会被保存到数据库中, 重登后依然有效.
//
// 默认值: yes
save_clothcolor: yes

// 是否保存服装风格? (开关选项)
// 启用后角色的服装风格将会被保存到数据库中, 重登后依然有效.
//
// 默认值: yes
save_body_style: yes

// 是否放弃对婚礼服装 (燕尾服、婚纱) 进行染色? (开关选项)
//
// 如果你的客户端没有婚礼服装的调色板档案, 或者调色板比其他职业要少,
// 那么请将此选项设为 yes, 可以有效避免意外.
//
// 举个例子:
// 全职业支持了 256 色调色板, 但是婚礼服装只支持 128 色调色板,
// 那么当玩家设置为 200 号染色的情况下切换到婚礼服装的时候,
// 就会因为找不到婚礼服装的 200 号调色板而跳框报错.
//
// 启用此选项后当玩家切换到婚礼服装的时候就会使用 0 号染色 (不染色),
// 从而避免客户端找不到调色板文件而跳框报错. 当玩家从婚礼服装切换回来的时候,
// 原先的染色编号 (例如上面例子中的 200) 将继续正常生效.
//
// 提示信息:
// save_clothcolor 和 wedding_modifydisplay 选项都必须被启用,
// 此选项才有意义, 否则哪怕设置为 no 也不会生效.
//
// 默认值: no (不放弃, 按原染色编号进行染色)
wedding_ignorepalette: no

// 是否放弃对圣诞服装进行染色? (开关选项)
// 此选项的作用与 wedding_ignorepalette 类似, 请参考其说明
//
// 默认值: no (不放弃, 按原染色编号进行染色)
xmas_ignorepalette: no

// 是否放弃对盛夏服装进行染色? (开关选项)
// 此选项的作用与 wedding_ignorepalette 类似, 请参考其说明
//
// 默认值: no (不放弃, 按原染色编号进行染色)
summer_ignorepalette: no

// 是否放弃对韩服服装进行染色? (开关选项)
// 此选项的作用与 wedding_ignorepalette 类似, 请参考其说明
//
// 默认值: no (不放弃, 按原染色编号进行染色)
hanbok_ignorepalette: no

// 是否放弃对啤酒节服装进行染色? (开关选项)
// 此选项的作用与 wedding_ignorepalette 类似, 请参考其说明
//
// 默认值: no (不放弃, 按原染色编号进行染色)
oktoberfest_ignorepalette: no

// 更改今日公告的显示方式
// 此处提到的今日公告是指 conf/motd.txt 中的公告内容
//
// 如果你的客户端无法正常展现今日公告的话,
// 请将此选项的值修改成 1 再试试看 (程序内部会换用其他替代封包来显示公告信息).
// 
// 默认值为: 0
motd_type: 0

// 登录时是否在聊天窗口中显示熊猫模拟器的版本号? (开关选项)
// 默认值为: no
display_version: no

// 是否让客户端显示幻觉特效? (开关选项)
// 若客户端由于显示波浪幻觉效果而导致很卡, 可以将此选项设置为 no.
// 
// 从 2013 年的客户端开始幻觉不再采用波浪特效,
// 而是采用翻转特效 (将画面上下翻转、左右翻转) 的方式来实现,
// 因此已经不会和以前使用波浪特效一样很卡了, 建议保持此选项为 yes
//
// 默认值为: yes
display_hallucination: yes






// 是否在状态图标上显示结束倒计时?
// 从 2009 年的客户端开始, 状态图标上可以显示出状态的结束倒计时.
// 设置为 no 的话, 那么就算是 2015 的客户端也不会显示倒计时.
//
// 注意: 关闭此选项的话, 技能的公用延迟也将变成 0.
// 如果你希望在保留状态倒计时特性的情况下, 关闭技能的公用延迟,
// 那么请保持这里的值为 yes, 然后修改 conf/battle/extend.conf 文件
// 中的 close_skill_common_delay 选项为 yes.

// 如果你的客户端支持状态变化定时器并且你想使用它们，则将此设置为1
// 2009年以后的客户端支持此功能
display_status_timers: yes

// 是否对“丢骰子”表情的结果进行随机处理,
// 防止客户端通过伪造封包等手段来指定骰出来点数? (开关选项)
client_reshuffle_dice: yes

// 在将个人、公会仓库中的物品信息发送给客户端之前, 是否先根据物品编号进行排序. 
// 官方服务器不会对仓库的物品进行排序. (开关选项)
// 注意: 启用此选项会服务端降低性能.

// 在角色和公会存储被发送到客户端之前对其进行排序。
// 官方服务器不对存储空间进行排序。(注1)
// 注意: 启用该选项会降低性能。
client_sort_storage: no

// Update enemy position while in invisible state? (Note 1)
// NOTE: Set to 'no' will make client won't update enemy position unless the players have "Intravision" effect.
//       So that will help client handling WPE - Maya Purple Hack stuff.
//       But it will screw 'the game animation display' while players in invisible state.

// 在隐身状态下更新敌人的位置？(注1)
// 注意：设置为 "否 "将使客户端不会更新敌人的位置，除非玩家有 "Intravision "效果。
// 所以这将有助于客户端处理WPE--Maya Purple Hack的东西。
// 但当玩家处于隐身状态时，它将破坏 "游戏动画显示"。

// 在隐身状态下更新敌人的位置？(注1)
// 注意：设置为 "否 "将使客户端不会更新敌人的位置，除非玩家有 "Intravision "效果。
// 所以这将有助于客户端处理WPE--Maya Purple Hack的东西。
// 但当玩家处于隐身状态时，它将破坏 "游戏动画显示"。
update_enemy_position: yes

// 当玩家瞬移、过图、或者登录时, 
// 是否会保持与瞬移、过图、或者登录之前相同的面向方向?
// 设置为 no 的话, 则瞬移、过图、或者登录时, 面向方向一律朝北 (官服设定).

// When a player teleports, changes maps, or logs in, will they face the direction they were facing before warped?
// Official: Disabled, players always face North.
// 当玩家传送、改变地图或登录时，他们会面对他们被扭曲前的方向吗？
// 官方。禁用，玩家总是面向北方。
spawn_direction: no

// 在 2013-12-23 及更新的客户端版本中, 是否显示打死 MVP 魔物后获得的 MVP 经验奖励信息? (开关选项)
// MVP 经验奖励信息是指: 恭喜您杀死了强大的魔物! 成为了荣耀的 MVP! 您的奖励经验为 %u !!
// 
// 韩服的客户端从 2013-12-23 开始移除了这条信息, 
// 使用此选项可以让地图服务器主动发送一条类似的信息进行替代.
// 默认值为: no.

//为2013-12-23cRagexe和更新的客户端显示MVP奖励信息？(注1)
// kRO删除了该数据包，这就重新启用了该信息。
//官方。已禁用。
mvp_exp_reward_message: no

// Send ping timer
// Interval in seconds for each timer invoke.

// 发送平移定时器
// 每次调用定时器的时间间隔（秒）。
ping_timer_inverval: 30

// Send packets timeout in seconds before ping packet can be sent.
// 发送数据包的超时时间，以秒为单位，在ping数据包可以被发送之前。
ping_time: 20

// Show skill scale for clients 2015-12-23 and newer? (Note 1)
// Official: yes

//显示2015-12-23及以后的客户的技能等级？(注1)
// 官方：是
show_skill_scale: yes

// Should the connection be dropped on server side after a player disconnection request was received? (Note 1)
// Note: Enabling this is known to cause problems on clients that make use of REST API calls.
// Official: no

// 在收到玩家的断开连接请求后，服务器端是否应该放弃连接？(注1)
// 注：已知启用该功能会对使用REST API调用的客户端造成问题。
// 官方：不
drop_connection_on_quit: no

// Macro Detector retries
// Number of times someone can fail the macro detection before being banned.
// Official: 3 (minimum: 1)

// 宏检测器的重试次数
// 在被禁止之前，某人可以在宏检测中失败的次数。
// 官方: 3 (最小: 1)
macro_detection_retry: 3

// Macro Detector timeout
// Amount of time in milliseconds before the macro detection will fail and the user will be banned.
// Official: 60000
// 宏检测器超时
// 在宏检测失败和用户被禁止之前的时间量，以毫秒为单位。
// 官方：60000
macro_detection_timeout: 60000

// Macro Detector punishment type
// 0 - Ban
// 1 - Jail
// Official: 0

// 宏观检测器的惩罚类型
// 0 - 禁令
// 1 - 监禁
// 官方：0
macro_detection_punishment: 0

// Macro Detector punishment duration
// Amount of time in minutes that the punishment type is active for. Use 0 for infinite.
// Official: 0

// 宏观检测器的惩罚持续时间
// 惩罚类型激活的时间（分钟）。使用0表示无限期。
// 官方：0
macro_detection_punishment_time: 0
