name: Build And Test

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - 'doc/**'
      - 'tools/python/**'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
      - 'doc/**'
      - 'tools/python/**'

env:
  DB_ROOT: root
  DB_HOST: "127.0.0.1"
  DB_NAME: ragnarok
  DB_USER: ragnarok
  DB_PASS: ragnarok
  CACHE_VERSION: "2021-12-18"

jobs:
  ubuntu-gcc:
    name: Ubuntu - GCC
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        compiler_version: [8, 9]
        build_type: ['Debug'] # 'RelWithDebInfo'
        configure_flags: ['-DENABLE_EXTRA_BUILDBOT_CODE=ON', '-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON']
        packetver: ['-DPACKETVER=20180620', '-DPACKETVER=20210107 -DPACKETVER_RE=ON']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Preparing dependencies
        run: |
          ./tools/integration/retry.sh sudo apt-get install mysql-client -y
          ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

      - name: Setup gcc compiler
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.compiler_version }}

      - name: Generate cache hash information
        run: |
          echo "$(cat /proc/version)" >> .CACHE_HASHFILE
          echo "gcc${{ matrix.compiler_version }}" >> .CACHE_HASHFILE
          echo "${{ matrix.build_type }}" >> .CACHE_HASHFILE
          echo "${{ matrix.configure_flags }}" >> .CACHE_HASHFILE
          echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
          echo "${{ hashFiles('3rdparty/boost/bootstrap.sh') }}" >> .CACHE_HASHFILE
          echo "${{ hashFiles('3rdparty/boost/Jamroot') }}" >> .CACHE_HASHFILE
          echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
          cat .CACHE_HASHFILE

      - name: Cache boost c++ libraries
        uses: actions/cache@v2
        id: cache-boost
        env:
          cache-name: cache-boost
        with:
          path: |
            3rdparty/boost/bin.v2/
            3rdparty/boost/stage/
            3rdparty/boost/b2
          key: ${{ env.cache-name }}-${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build boost c++ libraries
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          cd 3rdparty/boost/
          ./bootstrap.sh && ./b2

      - name: Setup ccache to speedup compilation
        uses: hendrikmuhs/ccache-action@v1.0.5
        with:
          key: ${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build Pandas
        run: |
          mkdir cbuild && cd cbuild
          cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.packetver }} ${{ matrix.configure_flags }}
          make

      - name: Preparing the runtime environment
        run: |
          ./tools/integration/setup_sql_8.0.sh
          ./tools/integration/enable_npc.sh

      - name: Launch Pandas
        run: |
          ./login-server --run-once
          ./char-server --run-once
          ./map-server --run-once

  ubuntu-clang:
    name: Ubuntu - Clang
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        compiler_version: [6, 13]
        build_type: ['Debug'] # 'RelWithDebInfo'
        configure_flags: ['-DENABLE_EXTRA_BUILDBOT_CODE=ON', '-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON']
        packetver: ['-DPACKETVER=20180620', '-DPACKETVER=20210107 -DPACKETVER_RE=ON']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Preparing dependencies
        run: |
          ./tools/integration/retry.sh sudo apt-get install mysql-client -y
          ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

      - name: Setup clang compiler
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.compiler_version }}

      - name: Generate cache hash information
        run: |
          echo "$(cat /proc/version)" >> .CACHE_HASHFILE
          echo "clang${{ matrix.compiler_version }}" >> .CACHE_HASHFILE
          echo "${{ matrix.build_type }}" >> .CACHE_HASHFILE
          echo "${{ matrix.configure_flags }}" >> .CACHE_HASHFILE
          echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
          echo "${{ hashFiles('3rdparty/boost/bootstrap.sh') }}" >> .CACHE_HASHFILE
          echo "${{ hashFiles('3rdparty/boost/Jamroot') }}" >> .CACHE_HASHFILE
          echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
          cat .CACHE_HASHFILE

      - name: Cache boost c++ libraries
        uses: actions/cache@v2
        id: cache-boost
        env:
          cache-name: cache-boost
        with:
          path: |
            3rdparty/boost/bin.v2/
            3rdparty/boost/stage/
            3rdparty/boost/b2
          key: ${{ env.cache-name }}-${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build boost c++ libraries
        if: steps.cache-boost.outputs.cache-hit != 'true'
        run: |
          cd 3rdparty/boost/
          ./bootstrap.sh && ./b2

      - name: Setup ccache to speedup compilation
        uses: hendrikmuhs/ccache-action@v1.0.5
        with:
          key: ${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build Pandas
        run: |
          mkdir cbuild && cd cbuild
          cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.packetver }} ${{ matrix.configure_flags }}
          make

      - name: Preparing the runtime environment
        run: |
          ./tools/integration/setup_sql_8.0.sh
          ./tools/integration/enable_npc.sh

      - name: Launch Pandas
        run: |
          ./login-server --run-once
          ./char-server --run-once
          ./map-server --run-once

#  windows:
#    name: VS2019
#    runs-on: windows-2019
#
#    strategy:
#      matrix:
#        define_constants: ['BUILDBOT', 'BUILDBOT;PRERE']
#        configuration: ['Debug'] # 'Release'
#        platform: ['Win32', 'x64']
#        packetver: ['PACKETVER=20180620', 'PACKETVER=20210107;PACKETVER_RE']
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 1
#
#      - name: Preparing dependencies
#        run: |
#          choco install mysql --version=8.0.26
#
#      - name: Setup msbuild compiler
#        uses: microsoft/setup-msbuild@v1.1
#
#      - name: Generate cache hash information
#        run: |
#          echo "${{ runner.os }}" >> .CACHE_HASHFILE
#          msbuild --version --nologo >> .CACHE_HASHFILE
#          echo "${{ matrix.configuration }}" >> .CACHE_HASHFILE
#          echo "${{ matrix.define_constants }}" >> .CACHE_HASHFILE
#          echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
#          echo "${{ hashFiles('3rdparty/boost/bootstrap.sh') }}" >> .CACHE_HASHFILE
#          echo "${{ hashFiles('3rdparty/boost/Jamroot') }}" >> .CACHE_HASHFILE
#          echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
#          cat .CACHE_HASHFILE
#
#      - name: Cache boost c++ libraries
#        uses: actions/cache@v2
#        id: cache-boost
#        env:
#          cache-name: cache-boost
#        with:
#          path: |
#            3rdparty/boost/bin.v2/
#            3rdparty/boost/stage/
#            3rdparty/boost/b2.exe
#          key: ${{ env.cache-name }}-${{ hashFiles('.CACHE_HASHFILE') }}
#
#      - name: Build boost c++ libraries
#        if: steps.cache-boost.outputs.cache-hit != 'true'
#        run: |
#          cd 3rdparty/boost/
#          ./bootstrap.bat
#
#      - name: Build Pandas
#        run: |
#          msbuild rAthena.sln /p:DefineConstants="${{ matrix.define_constants }};${{ matrix.packetver }}" /p:Configuration="${{ matrix.configuration }}" /p:Platform="${{ matrix.platform }}" -verbosity:minimal -maxCpuCount
#        shell: cmd
#
#      - name: Preparing the runtime environment
#        run: |
#          ./tools/integration/setup_sql_8.0.bat
#          ./tools/integration/enable_npc.bat
#        shell: cmd
#
#      - name: Launch Pandas
#        run: |
#          ./login-server --run-once
#          ./char-server --run-once
#          ./map-server --run-once
