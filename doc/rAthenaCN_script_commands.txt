//===== rAthenaCN Documentation ==============================
//= rAthenaCN 地图标记说明文档
//===== By: ==================================================
//= rAthenaCN 开发团队
//===== Last Updated: ========================================
//= 2019年2月11日
//===== Description: =========================================
//= 此文档对 rAthenaCN 添加的脚本指令进行功能说明以及介绍.
//============================================================

*setheaddir <朝向编号>{,<角色编号>};

调整角色纸娃娃脑袋的朝向

朝向编号:
	0 - 使纸娃娃的脑袋看向正前方
	1 - 使纸娃娃的脑袋向右看
	2 - 使纸娃娃的脑袋向左看

角色编号:
	可选参数, 若不携带此参数则控制当前脚本关联的角色
	若填写了指定角色编号, 那么就控制指定角色

返回值:
	该指令无论执行成功与否, 都不会有返回值

---------------------------------------

*setbodydir <朝向编号>{,<角色编号>};

调整角色纸娃娃身体的朝向

朝向编号:
	与 NPC 一致, 从 0 到 7 共 8 个方位可选择

角色编号:
	可选参数, 若不携带此参数则控制当前脚本关联的角色
	若填写了指定角色编号, 那么就控制指定角色

返回值:
	该指令无论执行成功与否, 都不会有返回值

---------------------------------------

*openbank {<角色编号>};

让指定的角色立刻打开银行界面 (只对拥有随身银行的客户端版本有效).

角色编号:
	可选参数, 若不携带此参数则控制当前脚本关联的角色
	若填写了指定角色编号, 那么就控制指定角色

返回值:
	若指定角色不在线, 则返回 0, 成功则返回 1

---------------------------------------

*instance_users <副本实例编号>;

获取指定的副本实例中已经进入副本地图的人数

副本实例编号:
	必填项, 这里填写的副本编号就是 instance_create 脚本指令返回的那个数值
	也可以用 instance_id 脚本指令来获得当前队伍关联的副本实例编号

返回值:
	成功直接返回副本中的人数, 副本不存在或副本中无人存在则返回 0

---------------------------------------

*cap <要判断的数值>,<最小值>,<最大值>;
*cap_value <要判断的数值>,<最小值>,<最大值>;

确保数值不低于给定的最小值, 不超过给定的最大值

要判断的数值:
	必填项, 数值类型的值

最小值:
	必填项, 数值类型的值

最大值:
	必填项, 数值类型的值

返回值:
	要判断的数值低于最小值则直接返回最小值, 超过最大值则直接返回最大值,
	如果要判断的数值在两者之间, 那么原样返回该数值

---------------------------------------

*mobremove <魔物的GID>;

根据 GID 移除一个魔物(只是移除, 不会让魔物死亡)

魔物的GID:
	必填项, 比如使用 monster 脚本指令后 $@mobid[] 数组的内容

返回值:
	该指令无论执行成功与否, 都不会有返回值
	
---------------------------------------

*mesclear;

清空玩家与当前 NPC 的对话框内容, 清空后可以用 mes 重新给对话框填充内容

不推荐使用:
	rAthena 已经推出了功能完全一致的指令 clear; 建议优先使用 rAthena 官方指令.
	此处的 mesclear 实际上是 clear 的别名, 以便兼容以前的部分脚本.

返回值:
	该指令无论执行成功与否, 都不会有返回值

---------------------------------------

*battleignore <开关标记>{,<角色编号>};

将指定的角色设置为魔物免战状态, 避免被魔物攻击
魔物会无视此玩家的存在, 因此不会攻击该玩家 (也可以叫无敌状态)

开关标记:
	0 - 关闭免战 (角色会被魔物看见)
	1 - 打开免战 (角色不会被魔物看见, 也不会被攻击)

返回值:
	该指令无论执行成功与否, 都不会有返回值

---------------------------------------

*getinventorylist {<角色编号>};

在 rAthena 原来返回的数组基础上, rAthenaCN 新增了以下返回数组:

- @inventorylist_idx[] 返回每个道具的背包位置序号.
- @inventorylist_uid$[] 返回每个道具的唯一编号 (字符串类型的数组, 末尾记得要带 $ 符号).

背包位置序号:
	背包位置序号每一次登录、每一次玩家在自己的背包中增删物品 (包括但不限: 
	存仓、存手推车、丢弃、购买和使用道具等操作) 都可能会导致背包位置序号有变化.
	所以请注意在一段连续、玩家不可能会停下来做其他动作的脚本中去使用“背包位置序号”.
	否则, 只要在 getinventorylist 之后, 还给玩家或脚本去进行道具的增删,
	那么 @inventorylist_idx[] 中的数据将立刻变得不再可靠.

---------------------------------------

*readparam(<参数代码>{,"<角色名称>"})
*readparam(<参数代码>{,<角色编号>})

在 rAthena 原来的参数代码基础上, rAthenaCN 新增了以下几个参数:

bAllStr - 返回角色的总 STR (用总 STR 减去 bStr 可得到面板中 STR 在加号右侧的值)
bAllAgi - 返回角色的总 AGI (用总 AGI 减去 bAgi 可得到面板中 AGI 在加号右侧的值)
bAllVit - 返回角色的总 VIT (用总 VIT 减去 bVit 可得到面板中 VIT 在加号右侧的值)
bAllInt - 返回角色的总 INT (用总 INT 减去 bInt 可得到面板中 INT 在加号右侧的值)
bAllDex - 返回角色的总 DEX (用总 DEX 减去 bDex 可得到面板中 DEX 在加号右侧的值)
bAllLuk - 返回角色的总 LUK (用总 LUK 减去 bLuk 可得到面板中 LUK 在加号右侧的值)

使用方法:
	dispbottom "总STR为 : " + readparam(bAllStr) + " (" + readparam(bStr) + " + " + (readparam(bAllStr) - readparam(bStr)) + ")";

---------------------------------------

*gethotkey <快捷键位置编号>{,<要获取的数据类型>};
*get_hotkey <快捷键位置编号>{,<要获取的数据类型>};

获取指定快捷键位置的信息, 快捷键位置编号必须大于 0 小于 MAX_HOTKEYS.
MAX_HOTKEYS 是个常量, 在脚本中可以直接使用以下方法来确认它的值:

	dispbottom "MAX_HOTKEYS = " + MAX_HOTKEYS;

要获取的数据类型:
	可选参数, 若携带这个参数则函数的返回值会具备不同含义:
	0	- 获取快捷键的类型
		> 若返回 0 表示该位置的快捷键上放的是一个物品
		> 若返回 1 表示该位置的快捷键上放的是一个技能
	1	- 获取技能编号或物品编号
	2	- 获取登记在快捷键上的技能等级

	若不携带 <要获取的数据类型> 参数, 那么指定的快捷键的信息会被存放到以下角色变量:
	
	@hotkey_type	- 快捷键的类型 (为 0 表示物品, 为 1 表示技能)
	@hotkey_id		- 技能编号或物品编号
	@hotkey_lv		- 登记在快捷键上的技能等级

返回值:
	若携带 <要获取的数据类型> 参数时, 发生错误将返回 -1, 成功则返回查询的值;
	不携带 <要获取的数据类型> 参数时, 发生错误将返回 -1, 成功则将信息保存到变量并返回 1

---------------------------------------

*sethotkey <快捷键位置编号>,<快捷键的类型>,<物品编号/技能编号>,<技能等级>;
*set_hotkey <快捷键位置编号>,<快捷键的类型>,<物品编号/技能编号>,<技能等级>;

设置玩家快捷键工具栏上的内容, 快捷键位置编号必须大于 0 小于 MAX_HOTKEYS.
MAX_HOTKEYS 是个常量, 在脚本中可以直接使用以下方法来确认它的值:

	dispbottom "MAX_HOTKEYS = " + MAX_HOTKEYS;

快捷键的类型:
	0	- 这个快捷键想放置一个物品 (若使用该值, 则"技能等级"参数无意义, 请直接给"技能等级"参数传 0 即可)
	1	- 这个快捷键想放置一个技能

物品编号/技能编号:
	根据您 <快捷键的类型> 的取值不同而拥有不同含义, 程序会校验给定的物品编号或技能编号是否有效.

技能等级:
	只有当 <快捷键的类型> 的值为 1 时才有意义. 若是个物品的话, 这里随便传什么都会被默认为 0.

返回值:
	设置成功则返回 1, 设置失败则返回 0

---------------------------------------

*showvend "<NPC名称>",<是否显示>{,"<招牌名称>"};

使指定的 NPC 头上可以显示露天商店的招牌, 点击招牌可触发与 NPC 的对话.

NPC名称:
	你可以指定 NPC 的名称, 或者用 strnpcinfo(0) 获取当前 NPC 的名称.

是否显示:
	0 - 隐藏招牌 (当选择隐藏招牌时, <招牌名称> 参数可不传递)
	1 - 显示招牌

返回值:
	操作成功则返回 1, 操作失败则返回 0

---------------------------------------

*viewequip <目标的角色编号>{,<是否强制查看>};

查看指定在线角色的装备面板信息.

是否强制查看:
	0	- 若目标角色禁止其他玩家查看装备, 那么就不查看 (对 GM 无影响)
	1	- 无视目标角色设置, 强制进行查看

注意事项:
	在 rAthenaCN v2.0.0 以前的版本中, 第一个参数提供的是账号编号而不是角色编号.
	现在统一改成角色编号, 请留意对相关的脚本进行升级调整.

返回值:
	操作成功则返回 1, 操作失败则返回 0

---------------------------------------

*equipidx <背包序号>{,<角色编号>};
*equipinventory <背包序号>{,<角色编号>};

穿戴指定背包序号的道具.
只要背包序号合法, 哪怕道具已被穿戴, 该函数也会返回 1.

背包序号:
	可以通过 getinventorylist 脚本指令的 @inventorylist_idx[] 数组来获得.

返回值:
	操作成功则返回 1, 操作失败则返回 0
