//--------------------------------------------------------------
// 熊猫模拟器战斗配置选项
// 最初的翻译由 Peter Kieser <pfak@telus.net> 完成
// 由 Ancyker 改写成纯英文, 由熊猫模拟器开发团队进行汉化
//--------------------------------------------------------------
//   开关选项: 可以用 on/off, yes/no 或 1/0 来表示开关
// 百分比选项: 填写 100 即表示 100%
//   掩码选项: 没有特殊说明的情况下, 默认用来表示游戏中各单位的类型
//             ------------------------------------
//             | 十六进制  |  十进制  |  对应单位 |
//             | 0x001     |  1       |  玩家     |
//             | 0x002     |  2       |  魔物     |
//             | 0x004     |  4       |  宠物     |
//             | 0x008     |  8       |  生命体   |
//             | 0x010     |  16      |  佣兵     |
//             | 0x080     |  128     |  NPC      |
//             | 0x200     |  512     |  元素精灵 |
//             ------------------------------------
//             掩码选项一个数值可以表示里面有多个内容. 
//             例如: 若想表示玩家和宠物, 只需填写 5 即可 (1 + 4)
//             掩码选项支持的填写格式有两种: 分别是十六进制和十进制,
//             若您填写十六进制则需要用 0x 作为数值的开头
//--------------------------------------------------------------

// 是否强制没有 loadevent 标记的地图
// 也能触发 OnPCLoadMapEvent 事件? [开关选项]
// 
// 在一般情况下, 只有地图添加了 loadevent 标记之后,
// 玩家进入这张地图时才会自动触发 OnPCLoadMapEvent 事件.
// 
// 如果将此选项改成 yes 的话, 那么无论地图是否拥有 loadevent 标记,
// 都会触发 OnPCLoadMapEvent 事件.
// 
// 若将此选项改成 no 的话 (默认值),
// 那么必须显式的给地图赋予 loadevent 标记, 才会触发 OnPCLoadMapEvent 事件.
force_loadevent: no

// 强制特定渠道获得的装备自动变成已鉴定 [掩码选项]
// 
//   &1: 使用 getgroupitem 获得的装备(部分箱子使用该指令)
//   &2: 打死魔物, 魔物道具掉落到地上的装备
//   &4: 打死魔物, 掉落到玩家背包中的MVP奖励(装备)
//   &8: 使用“偷窃”技能偷到的装备
//  &16: 在完成任务的过程中, 通过任务系统获得的装备(详见 db/[pre-]re/quest_db.txt 的注释)
//  &32: 通过 makeitem / makeitem2 / makeitem3 在地面上创造出的装备
//  &64: 使用 getrandgroupitem 获得的装备(部分箱子使用该指令)
// &128: 通过 getitem2 / getitem3 / getitembound2 / getitembound3 创造出的装备
// &256: 通过 rentitem2 / rentitem3 创造出的装备
// 
// 此选项默认值为 0. 若想启用以上全部, 请直接填写 511 即可.
force_identified: 0

// 当玩家乘坐商城坐骑后, 是否禁止使用物品 [掩码选项]
//
//   &1: 禁止使用“治愈类物品”, 物品类型编号为 0
//   &2: 禁止使用“可用类物品”, 物品类型编号为 2
//   &4: 禁止使用“盔甲/披肩/鞋子/头饰/装饰品等防具”, 物品类型编号为 4
//   &8: 禁止使用“武器”, 物品类型编号为 5
//  &16: 禁止使用“卡片类物品”, 物品类型编号为 6
//  &32: 禁止使用“箭矢类物品 (箭矢/子弹/其他)”, 物品类型编号为 10
//  &64: 禁止使用“延迟消耗类物品”, 物品类型编号为 11
// &128: 禁止使用“影子装备”, 物品类型编号为 12
// &256: 禁止使用“商城物品”, 物品类型编号为 18
//
// 当某种物品被禁止使用后, 从物品栏双击此类物品时, 什么事情都不会发生,
// 并且会在玩家的聊天栏中显示出 conf/msg_conf/pandas_map_msg.conf 中消息
// 编号为 2003 的提示信息. 
//
// rAthena 默认禁止在坐骑的时候使用“延迟消耗类物品”, 因此该选项的默认值为 64
cashmount_useitem_limit: 64

// 玩家在 PVP 地图上的最大攻速限制 (全职业限制)
//
// 提示: 这里的 GVG 地图是指拥有 MF_PVP 标记的地图.
//
// 若玩家根据 conf/player.conf 的 max_aspd、max_third_aspd、
// max_extended_aspd 计算出来的最大攻速, 比此选项设置的值更加小,
// 则以更小的攻速限制为准.
// 
// 假设此选项设置为 191, 且 conf/player.conf 的 max_aspd 为 190 的话
// 若你的职业是个剑士, 且处于 PVP 地图, 那么你的最大攻速将是 190,
// 而不是此选项设置的 191 (因为 max_aspd 的限制 190 更小)
//
// 若一张地图同时启用了 PVP 和 GVG 的话, 则以 GVG 的攻速限制优先
// 若设置为 0 则关闭此限制, 最大值可填写 199
max_aspd_for_pvp: 0

// 玩家在 GVG 地图上的最大攻速限制 (全职业限制)
// 
// 提示: 这里的 GVG 地图是指拥有 MF_GVG/MF_GVG_TE 标记的地图.
// 
// 公会城堡地图在开启 GVG 之前, 是没有 MF_GVG/MF_GVG_TE 地图标记的,
// 因此在没有开启 GVG 的时候跑去公会城堡地图, 不会受此处限制.
//
// 若玩家根据 conf/player.conf 的 max_aspd、max_third_aspd、
// max_extended_aspd 计算出来的最大攻速, 比此选项设置的值更加小,
// 则以更小的攻速限制为准.
// 
// 假设此选项设置为 191, 且 conf/player.conf 的 max_aspd 为 190 的话
// 若你的职业是个剑士, 且处于 GVG 地图, 那么你的最大攻速将是 190,
// 而不是此选项设置的 191 (因为 max_aspd 的限制 190 更小)
//
// 若一张地图同时启用了 PVP 和 GVG 的话, 则以 GVG 的攻速限制优先
// 若设置为 0 则关闭此限制, 最大值可填写 199
max_aspd_for_gvg: 0

// 当没有权限的玩家执行了 GM 指令时的处理策略
// 
// 0 - 不处理, 当做普通聊天内容发出去
// 1 - 给予无权限的提示, 不会将指令当做聊天信息发出去 (默认值)
// 2 - 不提示, 也不当做聊天信息发出去
//
// 若配置为 1, 则会在发送者的聊天栏中显示编号为 2000 的信息
//
// 只有玩家尝试执行的指令确实是存在的, 才会给出提示消息,
// 如果执行的是一个不存在的指令比如: @_@ 这样一个表情的话,
// 还是能够被正常当做聊天信息发出去的.
atcmd_no_permission: 1

// 当玩家使用挂机系列指令时,
// 处于哪些模式不会被魔物主动攻击? [掩码选项]
//
// &1: 离线挂机 (使用 @suspend 指令触发的挂机)
// &2: 离开模式 (使用 @afk 指令触发的挂机)
// &4: 普通模式 (使用 login 脚本指令触发的挂机)
//
// 默认值为: 3 (离线挂机 + 离开模式)
suspend_monsterignore: 3

// 当玩家使用挂机系列指令时,
// 处于哪些模式会自动回复私聊讯息? [掩码选项]
//
// &1: 使用 @suspend 指令触发的离线挂机
// &2: 使用 @afk 指令触发的离开模式 (AFK)
// &4: 使用 login 脚本指令触发的挂机
//
// 默认值为: 2 (离开模式)
suspend_whisper_response: 2

// 使用离线挂机指令 (@suspend) 进入挂机状态时,
// 当进入离线挂机模式那一瞬间, 以及地图服务器重启后自动上线的角色身体朝向哪个方位?
// 
// -1 = 保持原状
//
//  1 = 西北      0 = 正北      7 = 东北
//            ↖     |     ↗
//  2 = 正西  <-     +     ->   6 = 正东
//            ↙     |     ↘
//  3 = 西南      4 = 正南      5 = 东南
//  
// 默认值为: -1 (保持原状)
suspend_offline_bodydirection: -1

// 使用离线挂机指令 (@suspend) 进入挂机状态时,
// 当进入离线挂机模式那一瞬间, 以及地图服务器重启后自动上线的角色头部朝向哪个方位?
//
// -1 = 保持原状
//  0 = 相对于身体朝向的正前方, 头部看向正前方
//  1 = 相对于身体朝向的正前方, 头部看向右看
//  2 = 相对于身体朝向的正前方, 头部看向左看
//
// 默认值为: -1 (保持原状)
suspend_offline_headdirection: -1

// 使用离线挂机指令 (@suspend) 进入挂机状态时,
// 当进入离线挂机模式那一瞬间, 以及地图服务器重启后自动上线的角色处于什么样的站立/坐下状态?
//
// -1 = 保持原状
//  0 = 站立
//  1 = 坐下
//
// 默认值为: -1 (保持原状)
suspend_offline_sitdown: -1

// 使用离开模式指令 (@afk) 进入挂机状态时,
// 当进入离开模式那一瞬间, 以及地图服务器重启后自动上线的角色身体朝向哪个方位?
// 
// -1 = 保持原状
//
//  1 = 西北      0 = 正北      7 = 东北
/             ↖     |     ↗
//  2 = 正西  <-     +     ->   6 = 正东
//            ↙     |     ↘
//  3 = 西南      4 = 正南      5 = 东南
// 
// 默认值为: -1 (保持原状)
suspend_afk_bodydirection: -1

// 使用离开模式指令 (@afk) 进入挂机状态时,
// 当进入离开模式那一瞬间, 以及地图服务器重启后自动上线的角色头部朝向哪个方位?
//
// -1 = 保持原状
//  0 = 相对于身体朝向的正前方, 头部看向正前方
//  1 = 相对于身体朝向的正前方, 头部看向右看
//  2 = 相对于身体朝向的正前方, 头部看向左看
//
// 默认值为: -1 (保持原状)
suspend_afk_headdirection: -1

// 使用离开模式指令 (@afk) 进入挂机状态时,
// 当进入离开模式那一瞬间, 以及地图服务器重启后自动上线的角色处于什么样的站立/坐下状态?
//
// -1 = 保持原状
//  0 = 站立
//  1 = 坐下
// 
// 默认值为: 1 (坐下)
suspend_afk_sitdown: 1

// 使用离开模式指令 (@afk) 进入挂机状态时,
// 将角色的 "头饰上" 更换为哪一个指定的头饰外观编号?
//
// 提示: 若设置为 0 则不改变头饰外观
// 默认值为: 471 (AFK头饰)
suspend_afk_headtop_viewid: 471

// 使用 login 脚本指令将角色拉入普通挂机状态时,
// 角色身体朝向哪个方位?
// 
// -1 = 保持原状
//
//  1 = 西北      0 = 正北      7 = 东北
//            ↖     |     ↗
//  2 = 正西  <-     +     ->   6 = 正东
//            ↙     |     ↘
//  3 = 西南      4 = 正南      5 = 东南
//  
// 默认值为: -1 (保持原状)
suspend_normal_bodydirection: -1

// 使用 login 脚本指令将角色拉入普通挂机状态时,
// 角色头部朝向哪个方位?
//
// -1 = 保持原状
//  0 = 相对于身体朝向的正前方, 头部看向正前方
//  1 = 相对于身体朝向的正前方, 头部看向右看
//  2 = 相对于身体朝向的正前方, 头部看向左看
//
// 默认值为: -1 (保持原状)
suspend_normal_headdirection: -1

// 使用 login 脚本指令将角色拉入普通挂机状态时,
// 角色处于什么样的站立/坐下状态?
//
// -1 = 保持原状
//  0 = 站立
//  1 = 坐下
//
// 默认值为: -1 (保持原状)
suspend_normal_sitdown: -1

// 多人召唤时是否避开在线摆摊玩家? [掩码选项]
// 
// 在 rAthena 默认设定中, 除非是离线摆摊单位, 否则在线角色皆可以被召唤.
// 但有时使用 @recallall 把在线摆摊的玩家全召唤走也是非常麻烦的事情,
// 在熊猫模拟器中您可以通过此选项设定对应的行为, 避免全多人召唤指令拉走摆摊单位.
//
//  0 = 可召唤在线摆摊玩家 (无论是采购摊位还是出售摊位)
// &1 = 放弃召唤在线的出售摊位
// &2 = 放弃召唤在线的采购摊位
//
// 默认值为: 3 (放弃召唤在线的出售和采购摊位)
multiplayer_recall_behavior: 3

// 当魔物拥有且触发了自己的死亡事件标签后,
// 是否还会继续触发 OnNPCKillEvent 事件 [开关选项]
// 
// 0 = 自定义死亡事件被触发后, 不再触发 OnNPCKillEvent 事件
// 1 = 自定义死亡事件被触发后, 继续触发 OnNPCKillEvent 事件
// 
// 默认值为: 0 (不再触发)
always_trigger_npc_killevent: 0

// 当 MVP 魔物拥有且触发了自己的死亡事件标签后,
// 是否还会继续触发 OnPCKillMvpEvent 事件 [开关选项]
// 
// 0 = 自定义死亡事件被触发后, 不再触发 OnPCKillMvpEvent 事件
// 1 = 自定义死亡事件被触发后, 继续触发 OnPCKillMvpEvent 事件
// 
// 默认值为: 1 (继续触发)
//
// 提示信息:
// ----------
// MVP 魔物也是魔物, 若 MVP 魔物有自己的自定义死亡事件, 
// 那么也会根据 always_trigger_npc_killevent 决定是否触发 OnNPCKillEvent 事件,
// 完成 OnNPCKillEvent 事件后才会轮到 OnPCKillMvpEvent 事件
// 
// 使用 OnPCKillMvpEvent 的时候务必注意它与 OnNPCKillEvent 都应该
// 尽可能的少使用 mes 等需要等待用户输入的指令. 因为系统需要先完成 OnNPCKillEvent 事件, 
// 若 OnNPCKillEvent 事件中有对话框需要用户确认或关闭, 就会导致 OnPCKillMvpEvent 被事件队列阻塞.
always_trigger_mvp_killevent: 1

// 有哪些单位默认开启战斗记录 [掩码选项]
// 默认启用战斗记录的单位只要召唤出来就能记录输出和承伤情况
// 而不必显式的调用 enable_batrec 来启用
//
// 默认值为: 542 (魔物 + 宠物 + 生命体 + 佣兵 + 元素精灵)
batrec_autoenabled_unit: 542

// 重发魔物死亡封包的间隔时间 (单位: 毫秒)
// 用于解决视野范围内的怪物被近距离打死后, 客户端没有把它移除的这种情况.
//
// 该选项是 "缓解魔物死亡但客户端没移除魔物单位的问题" 的一部分.
// 
// 魔物死亡后会发送 clif_clearunit_area 的 CLR_DEAD 封包给客户端
// 但是由于复杂网络结构 (比如: 使用了转发\盾机\负载均衡) 可能没有全链路开启 TCP_NODELAY
// 会导致这个小封包粘在上一个封包中发出, 导致客户端无法正常收到和解析这个小封包.
// 最后导致客户端无法移除掉这个死亡的魔物 (客户端收不到服务端的移除信号)
// 
// 启用此选项后, 将在第一个魔物死亡封包发送之后等待指定的时间间隔, 
// 由服务端二次补发一个魔物死亡的封包给客户端. 
// 但代价是每个魔物死亡都需要额外发送一个封包, 会加大网络开销, 请根据网络环境酌情开启.
// 
// 注意: 取值不能太大 (间隔不能太久), 否则一方面没意义,
// 另外一方面如果魔物由于其他机制用相同的 GameID 复活则会导致它被错误的移除.
//
// 填写 0 表示不启用魔物死亡封包重发; 最大值为 1000 毫秒
// 开启的话, 建议可以从 16 毫秒开始, 每次增加 16 毫秒然后尝试一下效果
// 
// 默认值为: 0 (表示不开启)
repeat_clearunit_interval: 0

// 魔物死亡封包将会发送给周围多少个格的玩家
// 用于解决视野范围边缘的怪物被击退技能打死后, 客户端没有把它移除的这种情况.
//
// 该选项是 "缓解魔物死亡但客户端没移除魔物单位的问题" 的一部分.
//
// 部分技能会击退魔物, 比如当你召唤 100 个波利，将视野用鼠标滚轮放大,
// 然后用暴风雪打距离屏幕边缘的怪物. 技能读条完毕后立刻往反方向移动 (提前 @speed 1)
// 等暴风雪结束后回来观看, 较大概率会有魔物死亡但没被移除.
// 
// 造成这一现象的原因是:
// 当魔物死亡的时候, 死亡封包会发送给周围 AREA_SIZE 格子的其他单位, 
// 但如果你跑得太远(或者魔物被击退的太远), 那么封包发送的时候你已经不在接收范围内了.
// 而类似暴风雪这样的技能带延迟伤害和击退, 
// 再加上第一只波利死亡后掉落的物品会吸引其他波利靠近暴风雪的伤害区,
// 就非常容易触发这一现象.
// 
// 启用此选项后, 在魔物死亡时将会往周围一个更大范围的区域发送死亡封包,
// 确保玩家通常都能够在覆盖范围内.
// 
// 注意: AREA_SIZE 对应 conf/battle/client.conf 的 area_size 选项,
// 但 area_size 选项控制的内容不止封包发送范围, 还包括了玩家移动的时候服务端
// 会将玩家周围多少格范围内的游戏单位(NPC、魔物、其他玩家) 发送给客户端.
// 因此我们不推荐通过调整它来缓解此问题, 否则可能会增加更多的网络开销.
//
// 默认值为: 28
// 设为 0 则表示使用两倍 AREA_SIZE 的值.
// 此选项的最大值是 200
dead_area_size: 28

// 当"人孔/黑洞陷阱"地面陷阱被移除的时候, 是否同时使被捕获的玩家立即脱困? [开关选项]
//
// 在 rAthena 默认的设定中, 使用"元素领域"或"疯狂野草"等技能只能解除地面陷阱,
// 但是无法让已经被捕获的玩家立刻脱困.
//
// 但是根据 2018 年 TWRO 的演示视频以及常识,
// 在"人孔/黑洞陷阱"被解除的时候被捕获的玩家应该立刻脱困才正确.
// 因此设立此选项, 方便大家根据自己的需求灵活调整.
//
// 默认值为: yes
remove_manhole_with_status: yes

// 是否使新版客户端在执行 mes 指令时使用经典换行策略? [开关选项]
// 上述的新版客户端是指 2021-11-03 及更新的客户端
// 
// 在新版客户端中, 如果 mes 显示的字符串以空格开头,
// 且上一行有位置可以放下这次显示的文本,
// 那么这一行文本将会被追加到上一行文本的末尾. 这可能会打乱很多脚本的精心排版.
// 详情可见: https://blog.pandas.ws/changes-of-mes-on-20211117-client/
//
// 注意: 此选项使用的方法只能完美的处理 langtype = 3 (简体中文)
// 在 langtype = 4 (繁体中文) 下虽然能换行, 但是看起来会多一个空格导致错位,
// 可能是字体或者客户端针对 langtype = 4 的处理逻辑差异导致.
//
// 启用此选项后熊猫模拟器将迫使 mes 指令继续遵循以前的换行策略.
// 默认值为: yes
restore_mes_logic: yes

// 是否关闭加载物品数据库时的一些警告信息? [掩码选项]
// 警告通常都意味着风险, 但有的时候解决一个警告会意味着大量的劳动
// 如果您真的知道自己关闭的警告隐含的风险可能会发生的话,
// 那么可以在这里直接屏蔽掉警告信息.
//
//  0 = 不屏蔽任何警告
// &1 = 当武器没有在 item_db 中指定 WeaponLevel 字段时视为 1 级武器且屏蔽警告
//      注意: 武器等级与精炼系统相关, 请知道自己在做什么再关闭警告
// &2 = 当防具没有在 item_db 中指定 ArmorLevel  字段时视为 1 级防具且屏蔽警告
//      注意: 防具等级与精炼系统相关, 请知道自己在做什么再关闭警告
//
// 默认值为: 0
itemdb_warning_policy: 0

// 当魔物被攻击时受伤动画的默认播放时长, 值越小看起来越快 (单位: 毫秒)
// 注意: 若魔物在 mob_db 中没有设定 DamageMotion 字段时, 将采用此处设定的数值
// 
// 将此选项设置为 1 可用于解决部分技能在攻击 DamageMotion 为 0 的魔物时,
// 可能会出现的以下异常现象:
// 
// - 明明已经发生了暴击, 但是伤害数字没有显示暴击的红色气泡
// - 客户端无法正常播放攻击者角色的施法动作 (比如连续播放普通攻击动画)
//
// 目前已知会强制角色施放连续普通攻击动作的技能:
// - 刀刃之舞 (SHC_DANCING_KNIFE) 用这个技能去打首都的测试用魔物蛋, 即可触发问题
//
// 温馨提示:
// 修改此选项之后, 必须使用 @reloadmobdb 指令进行重载才能生效.
// 若您启用了疾风缓存, 在当前的版本中必须先手动删除 db/cache 目录后再使用指令重载.
//
// 默认值为: 0 (表示不开启, 开启的话建议设置为 1)
mob_default_damagemotion: 0

// 是否高优先级持久化保存 setunitdata 对魔物的设置? [开关选项]
// 在使用 setunitdata 去改变魔物 UMOB_ATKMIN, UMOB_MATKMIN 等数值时,
// 会在魔物进行能力重算时导致这些改变被丢失, 这肯定不是大家希望看到的.
//
// 例如:
// 您召唤一只血量不至于被死亡投射技能秒杀的魔物,
// 并使用 setunitdata 将它的 UMOB_MAXHP 设置为 1000000,
// 随后使用魔物情报技能确认魔物的当前血量后, 
// 使用四转技能死亡投射 (AG_DEADLY_PROJECTION) 对该魔物使用,
// 会发现该魔物的的最大 HP 已经回到默认了.
// 
// 因此熊猫做了一些改动, 来确保你对魔物的 setunitdata 可以被高优先级保存下来, 
// 哪怕魔物进行了能力重算, 也会重新应用你之前对它的 setunitdata 设定.
//
// 这部分改动的影响范围尽管已经在研发人员尽可能论证后进行调整,
// 但依然没有勇气确保 100% 没有任何后遗症,
// 因此我们保留了一个选项, 必要时您可以通过将该选项改成 no 来关闭此逻辑.
//
// 默认值为: yes
mob_setunitdata_persistence: yes

// PYHELP - BATTLECONFIG - INSERT POINT - <Section 4>
