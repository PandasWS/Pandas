# Setting the program language to C++
language: cpp

# Use the Ubuntu 18.04 - bionic
# https://docs.travis-ci.com/user/reference/bionic/
dist: bionic

# Use ccache to speed ​​up the compilation process 
cache: ccache

# We need use the Mysql services (5.7.30), so make it available
services:
  - mysql

# Specifying Python 3.6 for our scripts
# Currently, our continuous inheritance does not involve python scripts, 
# but we do not rule out that we will need them in the future. Set it up first.
python:
  - "3.6"

# We don't need the repository history
git:
  depth: 1

jobs:
  include:
# GCC Version 5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# GCC Version 6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# GCC Version 7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# GCC Version 8
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# GCC Version 9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# Clang Version 3.9
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
         - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# Clang Version 4.0
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
         - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# Clang Version 5.0
    - os: linux
      addons:
        apt:
          packages:
            - clang-5.0
      env:
         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# Clang Version 6.0
    - os: linux
      addons:
        apt:
          packages:
            - clang-6.0
      env:
         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON"
# GCC Version 5 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env:
         - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# GCC Version 6 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env:
         - MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# GCC Version 7 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
         - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# GCC Version 8 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# GCC Version 9 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-9
      env:
         - MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# Clang Version 3.9 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-3.9
          packages:
            - clang-3.9
      env:
         - MATRIX_EVAL="CC=clang-3.9 && CXX=clang++-3.9"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# Clang Version 4.0 with PreRenewal
    - os: linux
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-4.0
          packages:
            - clang-4.0
      env:
         - MATRIX_EVAL="CC=clang-4.0 && CXX=clang++-4.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# Clang Version 5.0 with PreRenewal
    - os: linux
      addons:
        apt:
          packages:
            - clang-5.0
      env:
         - MATRIX_EVAL="CC=clang-5.0 && CXX=clang++-5.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"
# Clang Version 6.0 with PreRenewal
    - os: linux
      addons:
        apt:
          packages:
            - clang-6.0
      env:
         - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
         - CONFIGURE_FLAGS="-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON"

before_install:
  - eval "${MATRIX_EVAL}"

install:
  ############################################################################
  # All the dependencies are installed in ${HOME}/deps/
  ############################################################################
  - DEPS_DIR="${HOME}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - CMAKE_URL="https://cmake.org/files/v3.18/cmake-3.18.0-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  - cmake --version

  ############################################################################
  # Build Boost C++ Libraries from 3rdparty
  ############################################################################
  - cd $TRAVIS_BUILD_DIR
  - cd 3rdparty/boost && ./bootstrap.sh && ./b2
  - cd $TRAVIS_BUILD_DIR

before_script:
  - uname -a
  - ./tools/ci/sql.sh

script:
  - ./tools/ci/npc.sh
  - mkdir cbuild || travis_terminate 1
  - cd cbuild || travis_terminate 1
  - cmake -G "Unix Makefiles" .. $CONFIGURE_FLAGS || travis_terminate 1
  - make || travis_terminate 1
  - cd $TRAVIS_BUILD_DIR || travis_terminate 1
  - ./login-server --run-once
  - ./char-server --run-once
  - ./map-server --run-once

env:
  global:
    - DB_ROOT="root"
    - DB_HOST="127.0.0.1"
    - DB_NAME="ragnarok"
    - DB_USER="ragnarok"
    - DB_PASS="ragnarok"

notifications:
  email: false
