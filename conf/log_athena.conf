//--------------------------------------------------------------
// rAthena 日志配置文件
//--------------------------------------------------------------
//   开关选项: 可以用 on/off, yes/no 或 1/0 来表示开关
// 百分比选项: 填写100即表示100%
//   掩码选项: 没有特殊说明的情况下, 默认用来表示游戏中各单位的类型
//             1: 玩家, 2: 魔物, 4: 宠物, 8: 生命体, 16:佣兵, 128:NPC, 512:元素精灵
//             掩码选项一个数值可以表示里面有多个内容. 
//             例如: 若您想表示玩家和宠物, 那么只需将1和4相加, 填写5即可
//--------------------------------------------------------------

// 请选择您想启用哪些日志记录? (掩码选项)
// 0x000000 - 不记录任何日志
// 0x000001 - (T) 记录玩家之间的交易详情
// 0x000002 - (V) 记录露天商店的交易详情
// 0x000004 - (P) 记录物品被玩家丢弃/捡起的日志信息
// 0x000008 - (L) 记录物品被魔物丢弃/捡起的日志信息
// 0x000010 - (S) 记录玩家和道具商店NPC之间的交易详情(从NPC购买物品/卖东西给NPC)
// 0x000020 - (N) 记录从NPC脚本中删除/获得的物品详情(如 getitem/delitem 指令等)
// 0x000040 - (D) 记录玩家从魔物身上偷窃到物品的日志信息
// 0x000080 - (C) 记录玩家使用物品的日志信息 (消耗品/宠物&生命体&佣兵的食物/技能消耗道具&短刀等攻击消耗道具)
// 0x000100 - (O) 记录玩家创造出来的/当做原材料消耗掉的物品信息
// 0x000200 - (U) 记录MVP掉落的特殊奖励物品信息
// 0x000400 - (A) 记录玩家创造/删除物品的详情 (通过 @/# 指令)
// 0x000800 - (R) 记录玩家从个人仓库存入/取出的物品信息
// 0x001000 - (G) 记录玩家从公会仓库存入/取出的物品信息
// 0x002000 - (E) 记录玩家利用邮件发送/接收的物品和金钱交易详情
// 0x004000 - (I) 记录拍卖系统的交易详情
// 0x008000 - (B) 记录采购商店的交易详情
// 0x010000 - (X) 记录其他全部交易详情 (租赁到期/插卡/被 item_check 自动移除/
//                离婚后的戒指删除/宠物蛋孵化和变回蛋状态/穿戴或卸下宠物装备/武器精炼技能/移除陷阱技能等)
// 0x020000 - ($) 记录现金点券/免费点券的消费以及使用点券购买到的物品详情
// 0x040000 - (K) 记录随身银行系统的交易详情(存钱/取钱)
// 0x080000 - (F) 记录当公会/队伍解散时, 自动删除的绑定物品信息
// 0x100000 - (Y) 记录乐透大转盘的抽奖详情(抽中了什么物品)
// 0x200000 - (Z) 记录融合道具的详情(消耗了什么物品, 融合出了什么物品)
// 0x400000 - (Q) 记录完成任务后, 任务系统给予的物品详情(在quest_db.txt中可以配置任务完成后玩家获得的道具)
// 
// 例如: 记录玩家之间的交易详情+露天商店的交易详情+从NPC脚本中删除/获得的物品详情+记录玩家创造/删除物品的详情
//       以10进制方式计算: 1+2+32+1024 = 1059
//       以16进制方式计算: 0x1+0x2+0x20+0x400 = 0x423
//       在 enable_logs 选项中, 你可以填写 1059, 也可以填写 0x423, 都是合法的.
// 
// 注意: 从背包将道具放入手推车或从手推车取出道具到背包, 都是不会记录日志的.
enable_logs: 0xFFFFFF

// 是否将日志写入到 MySQL 数据库中? (开关选项)
// 产生的记录将会被写入到 conf/inter_athena.conf 中以 log_db_ 开头的选项所配置的数据库中
sql_logs: yes

// 物品日志过滤器, 可配置某些情况下不记录日志
// =============================================================
// 如果符合您设定的条件, 那么信息就会被记录
// 0 = 不记录任何物品
// 1 = 无论是什么物品, 全都记录下来
// 
// 高级过滤器, 用来过滤某些特定类型的物品(掩码选项):
// 0002 - 治愈类物品 (0)
// 0004 - 其他物品(3) + 箭矢类物品 (10)
// 0008 - 可用类物品(2) + 鱼饵,延迟消耗类物品(11) + 商城物品(18)
// 0016 - 武器(5)
// 0032 - 盔甲/披肩/鞋子/头饰/装饰品等防具(4)
// 0064 - 卡片类物品(6)
// 0128 - 宠物饰品(8) + 宠物蛋(7) (魔物并不会直接掉落宠物蛋, 不过我们使用的是同一套日志系统, 所以用一样的方式进行记录)
// 0256 - 记录贵重物品 (若物品的买入价格 >= 下面 price_items_log 选项设定的金额, 则认为是贵重物品)
// 0512 - 记录堆叠数量很多的物品 (若物品的堆叠数量 >= 下面 amount_items_log 选项设定的数量, 则记录)
// 1024 - 记录精炼等级超过指定级别的物品 (如果他们的精炼级别 >= 下面 refine_items_log 选项设定的级别, 则认为需要记录)
// 2048 - 记录物品掉率低于指定概率的物品 (如果他们的掉率 <= 下面 rare_items_log 选项设定的掉率, 则认为需要记录)

// 下面举一些例子: 
// log_filter: 1    = 记录所有物品的日志
// log_filter: 2    = 只记录“治愈类物品”的相关日志
// log_filter: 4    = 只记录“其他物品”和“箭矢类物品”的相关日志
// log_filter: 64   = 只记录“卡片类物品”的相关日志
// log_filter: 322  = 只记录“治愈类物品”、“卡片类物品”和物品的买入价格 >= 下面 price_items_log 选项设定金额的贵重物品
// log_filter: 4080 = 只记录除了“治愈类物品”, "其他物品", "箭矢和其他可用物品"之外的相关日志 (包括其他不常见的掉落, 拍卖等)
log_filter: 1

// 记录精炼等级大于等于此数值的物品
// 此选项必须在 log_filter 中包含 1024 时才有用
refine_items_log: 5

// 记录物品最小掉率小于等于此数值的物品
// 填写 1 表示掉率为 0.01%, 填写 100 表示掉率为 1%, 以此类推
// 此选项必须在 log_filter 中包含 2048 时才有用
rare_items_log: 100

// 记录物品买入价格大于等于此数值的物品
// 此选项必须在 log_filter 中包含 256 时才有用
price_items_log: 1000

// 记录物品堆叠数量大于等于此数值的物品
// 此选项必须在 log_filter 中包含 512 时才有用
amount_items_log: 100
//=============================================================

// 当玩家使用枯树枝、血迹树枝等魔物召唤道具时, 记录日志 (开关选项)
log_branch: no

// 当玩家的金币(Zeny)数值有变化时, 记录日志
// 0 - 表示不记录
// 1 - 表示记录任何金币的使用情况(无论是获得金币, 还是花费了金币)
// 其他数字 - 表示只有玩家的单笔金币花销/收入大于等于所指定数字时, 才进行记录
log_zeny: 1

// 当玩家的商城点数(Cash Points)有变化时, 记录日志 (Note 1)
// no - 表示不记录
// yes - 表示记录任何商城点数的使用情况(无论是获得商城点数, 还是花费了商城点数)
log_cash: yes

// 当MVP魔物掉落物品时, 记录日志 (开关选项)
// 该选项已经过期, 现在记录魔物的掉落情况, 使用的是顶部的 enable_logs 选项. 
// 
// 不过, 这个选项用来记录“某个MVP在什么时候被哪个玩家杀死, 并给予玩家多少
// MVP经验奖励”还是很有用的. 
// 
// 日志信息会被记录在日志数据库中的 mvplog 表内
// 表名可在本文件的 log_mvpdrop_db 选项中定义(除非你知道在做什么, 否则别乱改表名)
log_mvpdrop: no

// 当玩家对自己使用GM指令或对他人使用GM指令时, 记录日志 (开关选项)
// 注意: 所谓对自己使用的GM指令, 即@开头的指令, 称之为 Atcommands
//       所谓对他人使用的GM指令, 即#开头的指令, 称之为 Charcommands
// 只有使用指令的玩家所对应的组在 'conf/groups.conf' 中
// 定义的 'log_commands' 为 'true', 才会记录其指令的使用情况
log_commands: yes

// 是否记录NPC脚本中使用'logmes'指令输出的信息? (开关选项)
//
// 日志信息会被记录在日志数据库中的 npclog 表内
// 表名可在本文件的 log_npc_db 选项中定义(除非你知道在做什么, 否则别乱改表名)
log_npc: yes

// 记录玩家在游戏中的聊天内容 (公开频道, 私聊, 队伍频道, 公会频道, 中央聊天频道, 部落频道) (掩码选项)
// 聊天日志过滤器
// 如果符合您设定的条件, 那么信息就会被记录
// =============================================================
// 0 = 不记录任何聊天内容
// 1 - 记录公开频道的聊天内容
// 2 - 记录玩家与玩家之间私聊的聊天内容
// 4 - 记录队伍频道的聊天内容
// 8 - 记录公会频道的聊天内容
// 16 - 记录中央聊天频道的聊天内容 (从代码上看, 此功能未实装)
// 32 - 记录部落频道的聊天内容
// 下面举一些例子:
// log_chat: 5 = 只记录“私聊”和“队伍频道”的聊天内容
// log_chat: 8 = 只记录“公会频道”的聊天内容
// log_chat: 63 = 记录全部频道的所有聊天内容
log_chat: 0

// 当GVG攻城战和SE城战期间, 是否停止记录玩家的聊天信息? (开关选项)
log_chat_woe_disable: no

// 记录喂食日志
// 当喂养宠物或者人工生命体时, 是否记录日志? (掩码选项)
// 0: 不记录
// 1: 喂养宠物时记录
// 2: 喂养人工生命体时记录
log_feeding: 3

// 往日志文件中输出内容时, 在每行信息的前面加上时间戳. 
// 最大长度不能超过20个字符. 
// 常用的格式有:
//   %I:%M:%S %p (小时:分钟:秒数 12小时制, 会携带AM或PM标记)
//   %H:%M:%S (小时:分钟:秒数, 24小时制)
//   %d/%b/%Y (日期/月份/年份)
// 更多的格式信息, 请参考C语言的strftime函数用法. 
// 
// rAthena官方默认值是 [%m/%d/%Y %H:%M:%S] 也就是24小时制的 [月/日/年 时:分:秒]
// 不过这明显不符合国人习惯, 为此BetterRa将其默认值改成了 [%Y/%m/%d %H:%M:%S] 
log_timestamp_format: [%Y/%m/%d %H:%M:%S]

// 日志数据文件/表名配置
// 以下的配置将会决定日志被记录到什么地方去.
// 如果 'sql_logs' 选项是启用的话, 那么默认会把日志记录到数据库, 否则将记录到文件中.

// 如果 'sql_logs' 选项为 no 的话, 那么你应该启用下面这几行被注释的信息,
// 并注释掉下面 log_gm_db: atcommandlog 开头的那几行.
// 程序会将日志写到这里指定的路径中, 比如: log/atcommandlog.log
// log_gm_db: log/atcommandlog.log
// log_branch_db: log/branchlog.log
// log_chat_db: log/chatlog.log
// log_mvpdrop_db: log/mvplog.log
// log_npc_db: log/npclog.log
// log_pick_db: log/picklog.log
// log_zeny_db: log/zenylog.log
// log_cash_db: log/cashlog.log
// log_feeding_db: log/feedinglog.log

// 如果 'sql_logs' 选项为 yes 的话, 那么你应该启用下面这几行信息,
// 并确保上面 log_gm_db: log/atcommandlog.log 开头的那几行被注释掉.
// 程序会将日志写到“日志数据库”中下面指定的表名中
log_gm_db: atcommandlog
log_branch_db: branchlog
log_chat_db: chatlog
log_mvpdrop_db: mvplog
log_npc_db: npclog
log_pick_db: picklog
log_zeny_db: zenylog
log_cash_db: cashlog
log_feeding_db: feedinglog

import: conf/import/log_conf.txt
