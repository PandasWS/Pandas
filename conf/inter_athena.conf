//--------------------------------------------------------------
// 熊猫模拟器 - 内部通讯配置文件
// 由熊猫模拟器开发团队翻译成中文并加以润色
//--------------------------------------------------------------
// 提示: 此配置文件中, 只要是以 // 作为开头的行, 都是注释信息. 
// 注释信息您可以随意修改, 不会干扰服务器的任何行为. 
//--------------------------------------------------------------

// 是否不主动返回服务器的 IP 地址给到客户端?
// 若您希望使用负载均衡或者反向代理等方式来提供服务,
// 且希望能更好的隐藏真实服务器 IP 地址, 那么请启用此选项.
//
// 注意: 通常启用此选项需要客户端在 DIFF 的时候启用代理服务器支持选项
// 在 NEMO 中选项的英文名为: Enable Proxy Support
// 启用此选项后客户端将不会再听命服务端返回的服务器 IP 地址, 只会认定使用
// clientinfo.xml 或 sclientinfo.xml 的地址与服务端进行连接
//
// 注意: 启用此选项将导致模拟器不支持多 IP 地图服务器架构,
// 但依然能够支持同 IP 不同端口的地图服务器架构...
hide_server_ipaddress: off

// 是否记录内部通讯日志? 
// 这个选项启用后当一个公会被创建、被解散、占领新城池时
// 都会往 char_server_db 选项所指向的 interlog 表写入日志信息
log_inter: 1

// 组队均分经验的等级限制
// 队伍中级别最高的人和最低的人之间相差等级不能超过 15 级 (默认)
// 否则就无法开启经验均分选项
party_share_level: 15

// Amount of status points a new character will start with
start_status_points: 48

// 连接到 MySQL 数据库时使用的默认连接编码
// 注意: 这个特性只有在 MySQL 版本在 4.1 及更新的版本中才支持.
// 当下方 *_codepage 等选项为空时才会使用此处 default_codepage 的值.
//
// 若设置为 auto 则编码规则会根据环境自动变化,
// 下面几个 *_codepage 的选项若取值为 auto , 那么其含义与此一致:
// 
// 1. 系统语言为简体中文时, auto 将会自动变成 gbk 编码
// 2. 系统语言为繁体中文时, auto 将会自动变成 big5 编码
// 3. 其他语言将会使用数据库 `character_set_database` 变量指定的编码
// 
// 若运行熊猫模拟器的操作系统语言和你期望开服的游戏内语言不一致,
// 那么建议在此明确指定 gbk 或者 big5 编码, 而不是 auto
default_codepage: auto

// 接下来涉及到的几个 MySQL 数据库服务器的设置,
// 若您的 MySQL 服务器和运行熊猫模拟器的同一台物理机器的话,
// 请注意以下几点建议:
// 
// 1. 如果您将熊猫模拟器运行在 Linux 系统, 那么对 Linux 来说,
//    理想情况下 IP 地址应该使用 localhost 而不是 127.0.0.1
// 
// 2. 如果您将熊猫模拟器运行在 Windows 系统,
//    建议将 IP 地址设置为 127.0.0.1
// 
// 如果您在 Linux 系统下碰到类似:
// Can't connect to local MySQL server through socket '/tmp/mysql.sock' (2)
// 的错误提示, 那么请果断将 localhost 改成 127.0.0.1

// 登录服务器专用
// MySQL 主数据库的连接配置信息
// 注意: login_server_ip 如果是域名, 那么禁止超过 63 个字符 (包括标点符号)
login_server_ip: 127.0.0.1
login_server_port: 3306
login_server_id: ragnarok
login_server_pw: ragnarok
login_server_db: ragnarok
login_codepage: 
login_case_sensitive: no

// 登录服务器专用
// IP 封禁数据库的连接配置信息
// 注意: ipban_db_ip 如果是域名, 那么禁止超过 63 个字符 (包括标点符号)
ipban_db_ip: 127.0.0.1
ipban_db_port: 3306
ipban_db_id: ragnarok
ipban_db_pw: ragnarok
ipban_db_db: ragnarok
ipban_codepage: 

// 角色服务器专用
// MySQL 主数据库的连接配置信息
// 注意: char_server_ip 如果是域名, 那么禁止超过 63 个字符 (包括标点符号)
char_server_ip: 127.0.0.1
char_server_port: 3306
char_server_id: ragnarok
char_server_pw: ragnarok
char_server_db: ragnarok
char_codepage: 

// 地图服务器专用
// MySQL 主数据库的连接配置信息
// 注意: map_server_ip 如果是域名, 那么禁止超过 63 个字符 (包括标点符号)
map_server_ip: 127.0.0.1
map_server_port: 3306
map_server_id: ragnarok
map_server_pw: ragnarok
map_server_db: ragnarok
map_codepage: 

// WEB 接口服务器专用
// MySQL 主数据库的连接配置信息
//
// 提示: WEB 接口服务器需要读取 login 和 char 表,
// 因此您必须确保此配置文件中 "登录服务器专用" 和 "角色服务器专用" 的配置信息是有效的,
// 这样才能让 WEB 服务器可以访问持有这两个表的数据库.
web_server_ip: 127.0.0.1
web_server_port: 3306
web_server_id: ragnarok
web_server_pw: ragnarok
web_server_db: ragnarok
web_codepage:

// 登录、地图服务器共用
// MySQL 日志数据库的连接配置信息
// 注意: log_db_ip 如果是域名, 那么禁止超过 63 个字符 (包括标点符号)
log_db_ip: 127.0.0.1
log_db_port: 3306
log_db_id: ragnarok
log_db_pw: ragnarok
log_db_db: ragnarok
log_codepage: 
log_login_db: loginlog

// MySQL 掉线重连策略
// 如果由于某些原因导致熊猫模拟器和 MySQL 数据库服务器断开连接,
// 那么会按照下面配置的策略来尝试重新连接
// 
// 若 mysql_reconnect_type 被设置为 1 时: 
// 
//     那么当熊猫模拟器断开和数据库服务器的连接后,
//     熊猫模拟器会尝试重连数据库服务器, 
//     如果尝试了 mysql_reconnect_count 所指定的次数后还是失败, 
//     那么相关服务器程序将自行关闭
// 
// 若 mysql_reconnect_type 被设置为 2 时(默认):
//
//     那么当熊猫模拟器断开和数据库服务器的连接后,
//     熊猫模拟器会无限次尝试重连数据库
// 
// 提示: 这个选项没什么太大的必要改动, 建议维持默认
mysql_reconnect_type: 2
mysql_reconnect_count: 1

// >>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<
// 
// 注意注意: 请不要改变接下来的这些设置,
// 除非您对数据库非常的了解, 并且知道自己在做什么事情.
// 若没有充分的理由建议您保持默认, 不要去修改他们.
// 
// >>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<>>><<<

// 登录服务器的数据库表名配置
login_server_account_db: login
ipban_table: ipbanlist

// 全部服务器的数据库表名配置
global_acc_reg_num_table: global_acc_reg_num
global_acc_reg_str_table: global_acc_reg_str

// 角色服务器的数据库表名配置
char_db: char
hotkey_db: hotkey
scdata_db: sc_data
cart_db: cart_inventory
inventory_db: inventory
charlog_db: charlog
skill_db: skill
interlog_db: interlog
memo_db: memo
guild_db: guild
guild_alliance_db: guild_alliance
guild_castle_db: guild_castle
guild_expulsion_db: guild_expulsion
guild_member_db: guild_member
guild_skill_db: guild_skill
guild_position_db: guild_position
guild_storage_db: guild_storage
party_db: party
pet_db: pet
friend_db: friends
mail_db: mail
mail_attachment_db: mail_attachments
auction_db: auction
quest_db: quest
homunculus_db: homunculus
skill_homunculus_db: skill_homunculus
mercenary_db: mercenary
mercenary_owner_db: mercenary_owner
elemental_db: elemental
skillcooldown_db: skillcooldown
bonus_script_db: bonus_script
acc_reg_num_table: acc_reg_num
acc_reg_str_table: acc_reg_str
char_reg_str_table: char_reg_str
char_reg_num_table: char_reg_num
clan_table: clan
clan_alliance_table: clan_alliance

// 地图服务器的数据库表名配置
buyingstore_table: buyingstores
buyingstore_items_table: buyingstore_items
item_table: item_db
renewal-item_table: item_db_re
item2_table: item_db2
renewal-item2_table: item_db2_re
item_cash_table: item_cash_db
item_cash2_table: item_cash_db2
mob_table: mob_db
renewal-mob_table: mob_db_re
mob2_table: mob_db2
renewal-mob2_table: mob_db2_re
mob_skill_table: mob_skill_db
renewal-mob_skill_table: mob_skill_db_re
mob_skill2_table: mob_skill_db2
renewal-mob_skill2_table: mob_skill_db2_re
mapreg_table: mapreg
sales_table: sales
vending_table: vendings
vending_items_table: vending_items
market_table: market
roulette_table: db_roulette
guild_storage_log: guild_storage_log
suspend_table: suspend

// WEB 接口服务器的数据库表名配置
guild_emblems: guild_emblems
user_configs: user_configs
char_configs: char_configs
merchant_configs: merchant_configs

// 是否让地图服务器加载 SQL 版本的 item_db, mob_db 及 mob_skill_db? (yes/no)
// 若改成 yes 的话, 地图服务器将不会再加载 db 目录中的 item_db.yaml、
// mob_db.txt 及 mob_skill_db.txt, 而是转而加载这些文件在数据库中对应的表.
// 
// 将此选项改成 yes 之前, 请先往 map_server_db 选项所指向的主数据库导入以下的 SQL 脚本,
// 否则 map-server 将找不到物品和魔物等数据:
// 
// 无论你使用的是复兴前还是复兴后的版本, 
// 请按顺序导入 sql-files\main\creation\use_sql_db\common 目录中的全部文件
// 
// 若您使用的是复兴后 (Renewal) 版本, 
// 请按顺序导入 sql-files\main\creation\use_sql_db\renewal 目录中的全部文件
// 
// 若您使用的是复兴前 (Pre-Renewal) 版本, 
// 请按顺序导入 sql-files\main\creation\use_sql_db\pre-renewal 目录中的全部文件
// 
// 导入之后也就意味着 item_db 等信息都已经被搬入到 MySQL 数据库中了, 
// 以后您想再修改 item_db 等信息时, 将不再是修改 db\[pre-]re\item_db.yaml 文件了
// 而是去 MySQL 数据库中直接更新对应的表.
// 
// 提示: 魔物数据库 mob_db 和魔物技能数据库 mob_skill_db 同理
use_sql_db: no

inter_server_conf: inter_server.yml

import: conf/import/inter_conf.txt
