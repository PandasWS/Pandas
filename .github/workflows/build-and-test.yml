name: Build And Test

on:
  push:
    branches: [master, develop]
    paths:
      - '.github/workflows/**'
      - 'tools/integration/**'
      - 'src/**'
      - '3rdparty/**'
  pull_request:
    branches: [master, develop]
    paths:
      - '.github/workflows/**'
      - 'tools/integration/**'
      - 'src/**'
      - '3rdparty/**'

env:
  DB_ROOT: root
  DB_HOST: "127.0.0.1"
  DB_NAME: ragnarok
  DB_USER: ragnarok
  DB_PASS: ragnarok
  CACHE_VERSION: "2021-12-18"

jobs:
  ubuntu-gcc:
    name: Ubuntu - GCC
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        compiler_version: [8, 9]
        build_type: ['Debug'] # 'RelWithDebInfo'
        configure_flags: ['-DENABLE_EXTRA_BUILDBOT_CODE=ON', '-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON']
        packetver: ['-DPACKETVER=20180620', '-DPACKETVER=20210107 -DPACKETVER_RE=ON']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Preparing dependencies
        run: |
          ./tools/integration/retry.sh sudo apt-get update -y
          ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

      - name: Setup gcc compiler
        uses: egor-tensin/setup-gcc@v1
        with:
          version: ${{ matrix.compiler_version }}

      - name: Generate cache hash information
        run: |
          echo "$(cat /proc/version)" >> .CACHE_HASHFILE
          echo "gcc${{ matrix.compiler_version }}" >> .CACHE_HASHFILE
          echo "${{ matrix.build_type }}" >> .CACHE_HASHFILE
          echo "${{ matrix.configure_flags }}" >> .CACHE_HASHFILE
          echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
          echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
          cat .CACHE_HASHFILE

      - name: Setup ccache to speedup compilation
        uses: hendrikmuhs/ccache-action@v1.0.5
        with:
          key: ${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build Pandas
        run: |
          mkdir cbuild && cd cbuild
          cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.packetver }} ${{ matrix.configure_flags }}
          make

      - name: Preparing the runtime environment
        run: |
          ./tools/integration/setup_sql_8.0.sh
          ./tools/integration/enable_npc.sh

      - name: Launch Pandas
        run: |
          ./login-server --run-once
          ./char-server --run-once
          ./map-server --run-once

  ubuntu-clang:
    name: Ubuntu - Clang
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        compiler_version: [7, 13]
        build_type: ['Debug'] # 'RelWithDebInfo'
        configure_flags: ['-DENABLE_EXTRA_BUILDBOT_CODE=ON', '-DENABLE_EXTRA_BUILDBOT_CODE=ON -DENABLE_PRERE_MODE=ON']
        packetver: ['-DPACKETVER=20180620', '-DPACKETVER=20210107 -DPACKETVER_RE=ON']

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Preparing dependencies
        run: |
          ./tools/integration/retry.sh sudo apt-get update -y
          ./tools/integration/retry.sh sudo apt-get install libmysqlclient-dev zlib1g-dev libpcre3-dev -y

      - name: Setup clang compiler
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.compiler_version }}

      - name: Generate cache hash information
        run: |
          echo "$(cat /proc/version)" >> .CACHE_HASHFILE
          echo "clang${{ matrix.compiler_version }}" >> .CACHE_HASHFILE
          echo "${{ matrix.build_type }}" >> .CACHE_HASHFILE
          echo "${{ matrix.configure_flags }}" >> .CACHE_HASHFILE
          echo "${{ matrix.packetver }}" >> .CACHE_HASHFILE
          echo "${{ env.CACHE_VERSION }}" >> .CACHE_HASHFILE
          cat .CACHE_HASHFILE

      - name: Setup ccache to speedup compilation
        uses: hendrikmuhs/ccache-action@v1.0.5
        with:
          key: ${{ hashFiles('.CACHE_HASHFILE') }}

      - name: Build Pandas
        run: |
          mkdir cbuild && cd cbuild
          cmake -G "Unix Makefiles" .. -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} ${{ matrix.packetver }} ${{ matrix.configure_flags }}
          make

      - name: Preparing the runtime environment
        run: |
          ./tools/integration/setup_sql_8.0.sh
          ./tools/integration/enable_npc.sh

      - name: Launch Pandas
        run: |
          ./login-server --run-once
          ./char-server --run-once
          ./map-server --run-once
